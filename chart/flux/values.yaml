# Default values for flux.

# Weave Cloud service token
token: ""

replicaCount: 1

image:
  repository: quay.io/weaveworks/flux
  tag: 1.11.1
  pullPolicy: IfNotPresent
  pullSecret:

service:
  type: ClusterIP
  port: 3030

helmOperator:
  replicaCount: 1
  create: false
  createCRD: true
  repository: quay.io/weaveworks/helm-operator
  tag: 0.7.1
  pullPolicy: IfNotPresent
  pullSecret:
  # Limit the operator scope to a single namespace
  allowNamespace:
  # Update dependencies for charts
  updateChartDeps: true
  # Log the diff when a chart release diverges
  logReleaseDiffs: false
  # Interval at which to check for changed charts
  chartsSyncInterval: "3m"
  # Tiller settings
  tillerNamespace: kube-system
  tls:
    secretName: "helm-client-certs"
    verify: false
    enable: false
    keyFile: "tls.key"
    certFile: "tls.crt"
    caContent: ""
    hostname: ""
  # Mount repositories.yaml configuration in a volume
  configureRepositories:
    enable: false
    volumeName: repositories-yaml
    secretName: flux-helm-repositories
    cacheVolumeName: repositories-cache
    repositories:
      # - name: bitnami
      #   url: https://charts.bitnami.com
      #   username:
      #   password:
  # Override Flux git settings
  git:
    pollInterval: ""
    timeout: ""
    # generate a SSH key named identity: ssh-keygen -q -N "" -f ./identity
    # create a Kubernetes secret: kubectl -n flux create secret generic helm-ssh --from-file=./identity
    # delete the private key: rm ./identity
    # add ./identity.pub as a read-only deployment key in your Git repo where the charts are
    # set the secret name (helm-ssh) below
    secretName: ""
  # Additional environment variables to set
  extraEnvs: []
  # extraEnvs:
  #   - name: FOO
  #     value: bar
  nodeSelector: {}
  annotations: {}
  tolerations: []
  affinity: {}
  resources:
    requests:
      cpu: 50m
      memory: 64Mi

rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

resources:
  requests:
    cpu: 50m
    memory: 64Mi

nodeSelector: {}

annotations: {}

tolerations: []

affinity: {}

extraVolumeMounts: []

extraVolumes: []

gpgKeys:
  # These keys will be imported into GPG in the Flux container.
  secretName: ""

git:
  # URL of git repo with Kubernetes manifests; e.g. git.url=ssh://git@github.com/weaveworks/flux-get-started
  url: ""
  # Branch of git repo to use for Kubernetes manifests
  branch: "master"
  # Path within git repo to locate Kubernetes manifests (relative path)
  path: ""
  # Username to use as git committer
  user: "Weave Flux"
  # Email to use as git committer
  email: "support@weave.works"
  # If set, commits will be signed with this GPG key.
  signingKey: ""
  # If set, the author of git commits will reflect the user who initiated the commit and will differ from the git committer.
  setAuthor: false
  # Label to keep track of sync progress
  label:
  # Append "[ci skip]" to commit messages so that CI will skip builds
  ciSkip: false
  # Period at which to poll git repo for new commits
  pollInterval: "5m"
  # Duration after which git operations time out
  timeout: "20s"
  # generate a SSH key named identity: ssh-keygen -q -N "" -f ./identity
  # create a Kubernetes secret: kubectl -n flux create secret generic flux-ssh --from-file=./identity
  # delete the private key: rm ./identity
  # add ./identity.pub as a deployment key with write access in your Git repo
  # set the secret name (flux-ssh) below
  secretName: ""

registry:
  # Period at which to check for updated images
  pollInterval: "5m"
  # Maximum registry requests per second per host
  rps: 200
  # Maximum number of warmer connections to remote and memcache
  burst: 125
  # Output trace of image registry requests to log
  trace: false
  # Use HTTP rather than HTTPS for these image registry domains eg --set registry.insecureHosts="registry1.cluster.local\,registry2.cluster.local"
  insecureHosts:
  # Duration to keep cached image info. Must be < 1 month. (Deprecated)
  cacheExpiry:
  # Do not scan images that match these glob expressions
  excludeImage:
  # AWS ECR settings
  ecr:
    region:
    includeId:
    excludeId:
  # Azure ACR settings
  acr:
    enabled: false
    hostPath: /etc/kubernetes/azure.json
  dockercfg:
    enabled: false
    secretName: ""

memcached:
  repository: memcached
  tag: 1.4.25
  pullSecret:
  createClusterIP: true
  verbose: false
  maxItemSize: 5m
  maxMemory: 512
  nodeSelector: {}
  tolerations: []
  affinity: {}
  resources: {}
    # If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 628Mi
    # requests:
    #  cpu: 50m
    #  memory: 512Mi

ssh:
  # Overrides for git over SSH. If you use your own git server, you
  # will likely need to provide a host key for it in this field.
  known_hosts: ""

kube:
  # Override for kubectl default config
  config: |
    apiVersion: v1
    clusters: []
    contexts:
    - context:
        cluster: ""
        namespace: default
        user: ""
      name: default
    current-context: default
    kind: Config
    preferences: {}
    users: []
# For https://github.com/justinbarrick/fluxcloud/
# additionalArgs:
# - --connect=ws://fluxcloud

# Additional environment variables to set
extraEnvs: []
# extraEnvs:
#   - name: FOO
#     value: bar

prometheus:
  enabled: false

# Add your own init container or uncomment and modify the given example.
initContainers: {}
#   flux-init:  # <- will be used as container name
#     image: "busybox:1.30.1"
#     imagePullPolicy: "IfNotPresent"
#     command: ['sh', '-c', 'counter=0; until [ "$counter" -ge 30 ]; do if [ -f /tmp/flux-deploy-key/identity ]; then exit 0; else echo waiting for flux deploy key && sleep 1 && counter=$((counter+1)); fi; done; exit 1;']
#     volumeMounts:
#       - mountPath: /tmp/flux-deploy-key
#         name: flux-deploy-key

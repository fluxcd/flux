{{- if or (eq .CacheBackend "memcached") (eq .CacheBackend "") -}}
---
# memcached deployment used by Flux to cache
# container image metadata.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memcached
  {{- if .Namespace }}
  namespace: {{ .Namespace }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: memcached
  template:
    metadata:
      labels:
        name: memcached
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - name: memcached
        image: memcached:1.5.20
        imagePullPolicy: IfNotPresent
        args:
        - -m 512   # Maximum memory to use, in megabytes
        - -I 5m    # Maximum size for one item
        - -p 11211 # Default port
        # - -vv    # Uncomment to get logs of each request and response.
        ports:
        - name: clients
          containerPort: 11211
  {{- if .AddSecurityContext}}
        securityContext:
          runAsUser: 11211
          runAsGroup: 11211
          allowPrivilegeEscalation: false
  {{- end }}
{{- else if eq .CacheBackend "redis" -}}
---
# redis deployment used by Flux to cache
# container image metadata.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  {{- if .Namespace }}
  namespace: {{ .Namespace }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: redis
  template:
    metadata:
      labels:
        name: redis
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - name: redis
        image: redis:5.0.7
        imagePullPolicy: IfNotPresent
        ports:
        - name: redis
          containerPort: 6379
  {{- if .AddSecurityContext}}
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          allowPrivilegeEscalation: false
  {{- end }}
{{- end }}

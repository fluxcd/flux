// Code generated by vfsgen; DO NOT EDIT.

package install

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// templates statically implements the virtual filesystem provided to vfsgen.
var templates = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2019, 9, 24, 23, 48, 44, 400796955, time.UTC),
		},
		"/flux-account.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-account.yaml.tmpl",
			modTime:          time.Date(2019, 9, 24, 0, 10, 37, 897094638, time.UTC),
			uncompressedSize: 836,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x4b\xaf\xd3\x30\x10\x85\xf7\xfe\x15\x47\xba\x8b\x0b\xe8\x26\xa8\x3b\x94\x5d\xdb\x05\x0b\x10\x8b\xf0\xd8\x20\x16\x63\x7b\x42\x4d\x5d\x3b\xf2\x23\x3c\xa2\xfc\x77\x94\xa4\x95\x9a\xb6\x20\x55\xba\x3b\x7b\x7c\xc6\x73\xe6\xe8\x2b\x8a\x42\x3c\xe0\xd3\x8e\x11\x39\x74\x46\x31\x48\x29\x9f\x5d\x7a\x82\xb2\x39\x26\x0e\x08\xde\x72\x7c\x02\x39\xbd\x28\x41\x1a\xa7\x8d\xfb\x0e\x0a\x2c\x1e\xe0\x9d\xfd\x0d\xc7\xac\x59\xa3\xf1\x01\xef\xb2\xe4\xe0\x38\x71\xc4\x4f\x93\x76\x53\x4b\x21\x29\xb2\x1e\x27\x70\x8c\x50\xde\xa5\xe0\x2d\x5e\xd4\x9b\xf5\xf6\x65\x29\xa8\x35\x5f\x38\x44\xe3\x5d\x85\x6e\x25\xf6\xc6\xe9\x0a\x1f\x67\x57\xeb\xd9\x94\x38\x70\x22\x4d\x89\x2a\x01\x58\x92\x6c\xe3\x78\x02\x1c\x1d\xb8\x42\x63\xf3\x2f\x71\x7e\xe9\x7b\x98\x06\xe5\x07\x3a\x70\x6c\x49\x31\x86\xe1\xf8\x3e\x5d\x2b\xf4\xfd\xf2\xb5\xef\xc1\x4e\x0f\x83\x18\x73\x39\x37\x14\x24\xa9\x92\x72\xda\xf9\x60\xfe\x50\x32\xde\x95\xfb\x37\xb1\x34\xfe\x75\xb7\x92\x9c\xe8\xe4\x77\x3b\x27\x54\x7b\xcb\xf7\x9a\x15\x21\x5b\x9e\x24\x05\xa8\x35\x6f\x83\xcf\x6d\xac\xf0\xf5\xf1\xd5\xe3\xb7\xa9\x2f\x70\xf4\x39\x28\x5e\x14\x3b\x0e\xf2\xac\x50\xc0\x79\x57\x1f\x85\x9f\xeb\xf7\xff\xd6\x3e\xc3\x86\x9b\x99\x80\xfb\x17\xf5\x96\x6b\x6e\x46\xd1\x69\xd1\xff\xcc\x17\xc0\x75\xb6\x8b\xff\x62\x96\x3f\x58\xa5\x63\x76\x37\xc1\xb9\xb2\x73\x89\xc1\x25\x27\xb7\xc8\xb0\x71\x3c\x69\x6e\x28\xdb\x34\xa3\x32\x12\xf5\x37\x00\x00\xff\xff\xfd\x7f\x67\x6a\x44\x03\x00\x00"),
		},
		"/flux-config-configmap.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-config-configmap.yaml.tmpl",
			modTime:          time.Date(2019, 9, 24, 23, 48, 44, 400796955, time.UTC),
			uncompressedSize: 520,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\xc1\x6b\xeb\x30\x0c\xc6\xef\xfe\x2b\x3e\x1a\xde\xad\x09\xbc\x77\xcc\xed\x51\x18\xec\xb0\x5d\x36\x76\x17\xb1\xdc\x8a\x25\x76\xb0\x95\x76\xe0\xf5\x7f\x1f\x4e\x52\xb2\x8e\x9d\xa2\x58\xfa\x3e\xfd\x24\xe5\x0c\x71\x20\x6f\xd1\x1c\x82\x77\x72\x7c\x90\x9e\x0f\xc1\x2b\x7b\xbd\x3d\xfd\x4f\xcb\xf7\x89\x46\x5c\xaf\xa6\xc2\xeb\x89\xe1\x42\xdf\x87\x8b\xf8\x23\xb6\xa4\x24\x4c\x89\x2d\x34\x60\x8c\xe1\x2c\x96\x41\xe8\xe6\xf4\x14\x49\x25\x78\xb8\x10\xe1\xfa\xe9\xc3\x36\xab\xcf\x0b\x77\x91\xb5\x48\xbb\xc8\xa4\x6c\x0b\x8f\x9e\x18\x75\xbd\x28\x6b\x27\x3d\xa3\x0b\xc3\x50\x28\x7b\xf1\x6c\x2a\x84\x71\x76\x93\x74\x6b\x64\x1b\x3c\xba\x4d\x43\x69\x8d\x86\x05\x2b\xb1\x16\x2a\x8d\x13\xef\x8b\xbb\xa9\x7e\x70\x7d\xeb\x4f\x09\xb4\x0d\xb5\x47\xd0\x13\xc7\x8b\x24\x86\xe8\x7d\x9d\xa9\x40\xeb\x00\x8d\xa9\xeb\xda\xd0\x28\x6f\x1c\x93\x04\xdf\xe2\xfc\xd7\xbc\x8b\xb7\xed\x66\x65\x06\x56\xb2\xa4\xd4\x1a\xc0\xd3\xc0\xed\xbc\x8a\x95\x74\xb9\x44\xf3\x4c\x03\xa7\x91\x3a\x2e\xab\x5e\xca\xe6\xdf\x16\x39\xdf\x67\x73\x06\x7b\x5b\xca\x66\x4f\x98\x9c\x6b\x8c\x51\xbc\x3a\xec\xfe\xa4\xdd\x6f\x17\xfd\x84\x17\x6f\x4b\xf4\xaf\x08\x37\x8b\xaf\x00\x00\x00\xff\xff\x0c\x93\x80\xc8\x08\x02\x00\x00"),
		},
		"/flux-config-secret.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-config-secret.yaml.tmpl",
			modTime:          time.Date(2019, 9, 24, 23, 48, 44, 400796955, time.UTC),
			uncompressedSize: 532,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\xcf\xea\x13\x31\x10\xbe\xe7\x29\x3e\xba\x08\x0a\xdd\x05\x3d\xee\x4d\x0a\x82\x07\xf5\xa0\x78\x1f\x36\x93\x76\x70\x37\x89\xc9\x6c\xab\xc4\xbe\xbb\x64\x77\xdb\x5a\xf9\x9d\x32\x49\xbe\x7f\x33\x53\x0a\xc4\x81\xbc\x45\x77\x08\xde\xc9\xf1\x83\x8c\x7c\x08\x5e\xd9\x2b\x5e\xfb\xa0\xb7\xf7\xf7\x79\x3d\x3f\x51\x7c\x83\xeb\xd5\x34\xf8\x76\x62\xb8\x30\x8e\xe1\x22\xfe\x88\xaf\x3c\x24\x56\x48\xc6\x9c\xd9\x42\x03\x62\x0a\x67\xb1\x0c\xc2\xb0\x30\xe7\x44\x2a\xc1\xc3\x85\x04\x37\xce\xbf\x6c\xb7\x89\x3c\xa8\x43\x62\x52\xb6\x35\x92\x9e\x18\x6d\xbb\x32\x5b\x27\x23\x63\x08\xd3\x54\x83\x8e\xe2\xd9\x34\x08\x71\x51\x93\x7c\x33\xb2\x1d\x3e\xba\x07\x87\xf2\x56\x4d\x14\x2b\x2a\xb3\xd6\x54\x9a\x66\xde\x57\x75\xd3\xfc\x97\xeb\x1f\x7f\xca\x20\xdc\xfb\xdd\x23\xe8\x89\xd3\x45\x32\x43\xf4\x19\x67\x1a\xd0\xd6\x40\x67\xda\xb6\x35\x14\xe5\x3b\xa7\x2c\xc1\xf7\x38\xbf\x35\x3f\xc4\xdb\x7e\x03\x98\x89\x95\x2c\x29\xf5\x06\xf0\x34\x71\xbf\xcc\x61\x8b\xb9\x6e\xa2\xfb\x4c\x13\xe7\x48\x03\xd7\x21\xaf\xb0\xe5\xda\xa3\x94\xe7\xdf\x52\xc0\xde\x56\x98\xfe\x8e\xdc\xe3\x4b\xa4\x9f\x33\x9b\xc5\x00\xa6\x94\x16\x31\x89\x57\x87\xdd\xab\xbc\x7b\x69\xbd\x7f\xe0\xc5\xdb\x5a\xbd\xab\x2a\x77\xbd\xbf\x01\x00\x00\xff\xff\xf6\x3e\x1d\x20\x14\x02\x00\x00"),
		},
		"/flux-deployment.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-deployment.yaml.tmpl",
			modTime:          time.Date(2019, 9, 24, 23, 50, 54, 682251634, time.UTC),
			uncompressedSize: 7185,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xdd\x6f\x1b\x37\x12\x7f\xf7\x5f\x31\x50\x1e\x92\x00\xd2\xca\xae\xdb\xe2\xa0\x9e\x0b\xa4\x49\xe3\xf3\xa5\x71\x8c\xf8\x72\x87\x7b\xba\x50\xdc\x91\x96\x10\x97\xdc\xe3\x90\x52\x05\xa3\xff\xfb\x61\xc8\xfd\xe0\x4a\x72\xe2\xcb\x5b\xfb\xd0\x24\xcb\xe1\x7c\x7f\xfc\x38\x9a\xcd\x66\x67\xa2\x51\xff\x44\x47\xca\x9a\x05\x88\xa6\xa1\xf9\xf6\xe2\x6c\xa3\x4c\xb9\x80\x37\xd8\x68\xbb\xaf\xd1\xf8\xb3\x1a\xbd\x28\x85\x17\x8b\x33\x00\x23\x6a\x5c\xc0\x4a\x87\xdf\x1f\x1e\x40\xad\xa0\xb8\x15\x35\x52\x23\x24\xc2\x1f\x7f\xb4\xe7\xf1\x9f\x0b\x78\x78\x18\x9f\x3e\x3c\x00\x9a\x92\xc9\xa8\x41\xc9\xcc\x1c\x36\x5a\x49\x41\x0b\xb8\x38\x03\x20\xd4\x28\xbd\x75\x7c\x02\x50\x0b\x2f\xab\xdf\xc4\x12\x35\xa5\x0f\xb9\x6c\xa6\xf6\x4e\x78\x5c\xef\xd3\xa1\xdf\x37\xb8\x80\x8f\x28\x1d\x0a\x8f\x67\x00\x1e\xeb\x46\x0b\x8f\x2d\xb3\xcc\x02\xfe\x4f\x18\x63\xbd\xf0\xca\x9a\x9e\x39\x40\xe3\x6c\x8d\xbe\xc2\x40\x85\xb2\xf3\xc6\x3a\xbf\x80\xc9\xe5\xf9\xe5\xc5\x04\x9e\x81\x47\xad\x33\x0a\xf0\x16\x48\x3a\xd1\x20\xcc\x6b\xf4\x4e\x49\x62\xe3\x1a\xab\x8c\x7f\x4e\xc0\x97\x8b\x96\xb1\x1e\xd9\x70\x60\x05\x40\xe7\x8b\xf8\x77\x74\x5b\x25\xf1\x95\x94\x36\x18\x7f\x3b\x26\x04\xd8\x5a\x1d\x6a\xec\x59\xcd\x5a\x56\x6b\xe5\x67\x1b\xdc\xf7\x02\x88\xbd\xe0\x07\x81\xdd\x97\x81\xdf\x8c\xaf\x94\x31\xc0\x19\x55\x89\x2b\x11\xb4\x7f\x6f\x4b\x5c\xc0\xf9\xf7\xe7\xe7\xf0\x0c\x76\x15\x1a\xa8\x59\x1b\x2c\xc1\xa1\x28\x67\xd6\xe8\xfd\x14\x76\x08\x3b\x6b\x9e\x7b\x58\x22\x88\xa5\x46\xf6\x87\xac\x6a\x5b\x9e\xb5\x0c\x9f\xc1\x3f\x2a\x45\xa0\x08\x04\xf8\xba\x59\x11\x04\xc2\x12\x56\xd6\xc1\x1a\x0d\x3a\xe1\x95\x59\xc3\xfd\xfd\xdf\x60\x83\x7b\x2a\xe0\xc6\xc0\xbb\xbf\x10\xfc\x7c\x05\x17\xc5\xc5\xf9\xb4\xe7\xd2\xc9\x4e\x26\x10\x08\x87\xb9\x1e\x64\x59\x15\x83\x58\x82\x00\xc2\x46\x70\x52\xb4\x8e\x82\x1d\xf6\x6c\xa4\x30\xb0\x73\xca\xb3\xa2\xc5\x69\xff\xad\xd1\xf4\xce\xc0\xba\xf1\xfb\x37\xca\xe5\x4e\xac\xb1\x54\xa1\x5e\xc0\x7b\xac\xad\xdb\xe7\x76\x22\xac\xac\xd6\x76\xc7\x16\xb5\xa2\x15\x45\x53\x03\xf1\x37\x01\x32\x90\xb7\xb5\x62\x0f\x6c\x8c\xdd\x99\xff\x54\x96\x3c\xf5\x2c\x56\x4a\xe3\x14\x76\x95\x92\x15\xec\x6d\x80\x9d\xd2\x3a\x19\xe5\x2d\x94\x96\xeb\x8c\x3f\xf3\x25\xfe\x8b\x03\xbb\x33\xac\x76\xcf\xc0\x61\x63\xc1\x09\x5f\xa1\x03\x5f\x09\xd3\x0a\x5e\x2b\x5f\x85\x25\x58\xfe\x88\xa0\xd5\x06\x0b\xf8\xb7\x0d\xcf\xb5\x06\xa1\xc9\x76\x22\xc6\xce\x06\xe5\x41\x19\x6f\xe3\x1d\x69\x8d\x17\xca\xa0\x9b\xc2\x12\xb5\xdd\x15\x70\x8f\x83\x57\x2b\xef\x1b\x5a\xcc\xe7\xa5\x95\x54\x70\x62\xc9\x92\x4b\x07\xcd\x9c\x4b\x8f\xfc\x7c\x1d\x54\x89\x34\x0f\x84\xb3\xc6\xa9\xad\xf0\x18\x53\x8f\x0d\x29\x2a\x5f\xeb\x9e\x53\x17\x0b\xa2\x6a\x26\xad\x59\xa9\x75\x7f\x04\x90\x3e\xbc\x17\xcd\x22\xfb\x98\x17\xd2\x2c\xbb\xf6\xad\x71\x29\x36\x61\x89\xf3\xc4\x64\x48\xbf\xaf\xc6\x64\xa7\xa8\xe2\x2f\x95\xd8\x22\x08\x28\xd5\x6a\x85\x8e\x9b\x66\xc7\xa1\xad\xaa\xa1\x31\xc6\x10\x24\x76\x79\x10\xb8\xb9\x6c\x55\x89\x9d\xdb\x57\x6a\x5d\x8b\x66\x50\x44\xf9\x0a\x84\x01\x34\xde\xed\xa3\x0d\x9f\x13\xd1\xe7\x29\x08\x53\x42\x30\xd2\xd6\xdc\xad\xe3\xfd\x64\xed\xfb\x18\x4e\x61\xca\x9e\x0b\x9a\x6d\xe4\xa0\x90\xda\x78\x1e\x45\x80\xdd\xf0\x0d\x11\xc8\xae\x7d\x35\x02\xb1\x13\x78\x0b\xaa\xe6\x3e\x09\xd7\x77\xd7\xb1\x09\xc0\x0b\x36\x8b\xd4\xda\x28\x33\x08\x67\xe3\xb6\xe8\xd4\x4a\xc9\xd8\xb0\xa1\x09\xae\xb1\x84\xf4\xf2\x09\x8e\xec\xb9\xa4\xf6\x91\xbc\xc8\x0e\x62\x79\x4f\x70\x1c\x08\xb7\x1e\xca\xf4\x11\x8f\xad\x9b\x35\xf7\x0f\xca\x5c\x33\x6e\xc1\xcf\x1e\x69\xc2\xc7\xf7\x4e\x34\xe1\x27\x7b\xb3\x33\x5b\xb4\xd1\x0a\x2e\xf9\x8b\x9d\xca\xf2\xca\x11\xa7\xe1\x7e\x1a\x99\x25\x27\x34\x7b\x60\xd6\x16\xd2\x8c\x9b\x12\xb0\x6f\xd8\x0f\x5a\x99\xc1\x99\xb6\x89\x8c\x15\x75\x32\xcb\x02\x6e\x56\xc3\x4d\x41\xb3\x3e\x81\x99\x8a\xd0\xb3\x82\xde\x05\x9c\x8e\xa2\x32\x56\x34\xd3\x45\xf0\xd8\x78\xdd\x25\xdd\x14\x2c\x77\xb6\x9d\x22\x8c\xcd\x29\xa7\x1b\xf2\x04\xee\xa3\x83\xbb\xf8\x24\x78\xc2\xba\x17\x89\xd1\x5b\xa5\xf1\xb5\x35\x9e\x43\xdd\x7e\x7a\x45\xbd\x8c\x84\x5e\xf2\xb1\x10\x63\xd4\x5a\x94\xbc\xd5\x0f\x83\xa3\x72\x38\x28\x86\x51\xfd\x0c\xb0\xe7\x09\x8a\xbd\x30\xf6\x94\x76\x2f\xff\x2f\xf5\x9e\x00\x00\x1e\xd1\xb0\xab\xdd\xbe\xed\x1f\x81\x8d\x0c\x8e\xb4\xa9\xe4\x30\x0e\x65\x63\x61\xb2\x48\x6d\x7f\x02\xaa\x16\x6b\xa4\x3e\xf5\x0a\x78\xab\x4c\x19\xd3\xab\xe6\x19\xe6\x50\x0e\x2d\x32\xcd\x2f\x8d\x82\x90\x27\x55\xbc\xca\x15\xcf\xa0\x14\x84\xef\x87\x4c\x15\x96\x45\x69\xe5\x06\x5d\x21\x6d\x3d\x77\xf3\x34\x70\xe2\x1f\x73\x2f\xfa\x3a\xed\x9a\x06\x83\x4b\x06\x9e\x2c\xd5\x8b\x35\xb0\xa6\x45\x4f\x13\xc5\x24\x73\x5a\x1e\xe3\xa3\xbb\xa0\xf5\x9d\xd5\x4a\xee\x17\x70\xb3\xba\xb5\xfe\xce\x21\xe5\x4a\x3b\x24\x1b\x9c\x44\xca\xfd\xec\xf0\xbf\x01\xc9\x8f\xbe\x01\xc8\x26\x2c\xe0\x87\xf3\x7a\xf4\xb1\x8e\x30\x62\x01\x3f\x7e\xff\x5e\x0d\x10\xd4\xba\xfc\xf2\x6c\x08\xc4\x5d\x84\xa3\x97\xe7\x97\x8c\xca\x94\x59\x59\x57\xc7\xaa\x11\xba\xa7\xd6\x6a\x8b\x06\x89\xee\x9c\x5d\x62\xae\x01\x7b\xf0\x7a\x9c\x10\x49\x54\x62\x38\xfe\x2c\x7c\xb5\x80\xb9\x68\x54\x72\xec\xf6\xc7\xb9\x2a\xd1\x78\xe5\xf7\x45\x13\x96\x19\xad\x32\xca\x2b\xa1\xdf\xa0\x16\xfb\x7b\xee\xfd\x25\x2d\xe0\x87\x8c\xc0\xab\x1a\x6d\xf0\x27\xce\x18\xc0\xa9\x3f\x87\xaa\xd9\x40\x18\x05\xe6\x34\xf4\x86\x04\xa1\xee\x92\x66\xe8\x65\xd4\xac\x9c\x13\x55\xfc\x86\xb0\xe9\x55\x03\xda\xb6\xb3\x6c\xcd\x21\x03\x65\x52\xce\x3d\xa7\x74\x87\xa8\x9a\x8f\x0a\xb4\xf3\xd9\x07\xa3\xf7\x8b\xd8\x47\x99\x1b\xe3\xeb\x38\xfd\x96\x2d\x68\xe0\x0a\x6a\xd0\xad\xac\x93\xc8\x4c\x13\xa0\x66\x3c\xfd\x98\xe2\x39\xe6\x1d\xeb\xbe\x15\xae\xd5\x3d\x91\x7d\x9b\xfa\x59\x49\xde\x18\xa9\x43\x9c\xca\xfc\x2c\x48\xe0\xa9\x9b\xd8\x09\x77\x7e\x05\x26\x77\x40\xf9\x27\xbe\x7a\x00\x61\x87\x81\x56\xa2\xd4\xc2\xf1\x68\x58\xda\x6d\x56\xef\x5f\x80\x98\x69\xf4\xe6\xc6\x3b\x6b\xfd\xbc\x20\xaa\x1e\x35\x40\x98\x91\xd4\xc9\x00\x7f\x26\x49\xf2\xb4\x23\xc9\x38\xa0\xd9\x2a\x67\x4d\x04\x1b\x09\xc7\x4d\xde\x7d\xfa\xe5\xd7\xd7\x1f\x6e\xdf\xde\x5c\x4f\x12\xbc\x98\xb2\x3f\xec\x16\x9d\x1b\x63\xc1\x8c\x4d\x1c\xf8\xcb\x7d\x42\x6a\x5e\x9f\xb2\xf1\x08\xc4\x1d\xdb\x38\x24\x27\x13\x3f\x6a\x28\x03\x0b\x7e\xd4\x76\xd2\xb8\x23\x67\x30\xb7\xd5\x2e\xc6\x24\x63\x71\x08\x96\xf3\xa0\x47\xa4\xdc\x3d\xeb\x84\x01\xa1\x3d\x3a\xc3\xcf\xb6\x23\x8d\x57\xce\xd6\x3d\x9e\xa9\x19\x08\x08\xe2\x74\x6b\x11\x1b\xbb\x41\x5b\xb9\xa1\xe3\x60\xa3\xd9\x2e\x4e\xf8\x65\x70\xf7\xc8\x2f\x5b\xa1\x03\x1e\xf9\xe4\x6b\x49\x7c\x98\x03\x1d\x9e\xfb\x42\x06\x30\x9c\x1c\xc3\xc8\x2f\x00\xc9\x47\xf2\x92\xa9\x12\x72\x1e\xd1\x8d\xfb\x43\x7f\xd4\x6e\x69\x8e\x91\x46\x0f\x28\x9e\x04\x29\x1e\xc9\x9d\x5c\x4c\x07\x21\xba\x4f\x6c\xeb\x62\xe4\xbc\x14\xff\xb4\x77\xc0\x92\x27\xa0\x14\xb2\x62\xe8\x69\x46\x39\xd5\x3f\x95\x38\x7b\x58\xce\x34\xe3\x62\x5d\xfb\x16\xca\x2e\xb4\x7b\x93\x78\x71\x1a\x85\xf0\x7b\x9f\x42\xd3\xe8\x3d\x47\x80\xf2\x18\x0c\x18\xda\xef\x2c\x6b\x19\x38\x97\x62\xa6\xc7\x25\x4f\x34\x0c\x2a\xbb\x8b\x3b\x0d\x6b\x0c\xca\x08\x5f\x95\x1f\xc7\x6c\x36\xeb\x0d\x88\x0f\x5a\x16\x7e\xd5\x7f\x2a\x5a\x20\x5f\xd0\x56\x16\x52\x07\xf2\xe8\x0a\x6e\x9c\x3a\x77\xc9\x27\x4a\x35\x3e\xb8\xe2\x75\x22\xbd\xb9\x1b\x19\xc5\xe5\x4e\xe8\xe3\xce\x64\x9c\x51\x83\x0e\x1d\xbd\xb7\x40\xde\x31\x65\xdc\x62\x0c\xb4\x63\x95\x5b\xf2\xab\xb3\x11\x9a\x53\x04\x75\xa0\xb8\xd6\x89\xee\x53\x58\xa6\x3c\x5e\xc6\x89\x12\xb1\x54\xdc\xe6\xbc\xe8\x56\x24\x2f\x73\x65\xba\xaa\x4e\xf9\xcf\xf0\x2f\x5b\xea\x8c\x35\xe1\x36\x9c\x46\xcb\xac\x54\xee\xea\x68\xe0\xe4\x7a\x7d\xcc\xa0\xdc\x10\xbe\x4f\x1f\x7f\x4b\x6b\x27\x61\xd6\xe9\xec\x5a\xf9\xb8\x0a\x21\xe5\xad\xdb\xf7\x8d\xf2\x2d\x43\xd0\xb1\x74\x9e\x7f\xc1\xe9\xab\x87\x07\x28\xae\x95\x67\x56\x59\x41\xf4\x24\x4b\x27\x8c\xac\x3a\xaa\x5f\xe2\xbf\xd2\x26\x93\x8b\xea\x5a\xc5\x82\xa0\x93\x57\x19\x9d\xf0\xc5\xfb\x18\x0b\xfa\xbb\x55\x26\xbb\x31\x99\x4e\xda\x8d\xa8\x26\x1c\xdd\x07\x75\x62\x50\xee\x84\x89\x39\xe8\x90\x43\x2b\xd3\x5b\xb5\x16\x46\xad\x18\x6d\x72\x96\x92\x2a\xd1\x25\x73\x0f\x20\x7a\xdc\xe4\x58\x42\x08\xa6\x44\x77\xe0\x43\x87\x5a\x78\xb5\xc5\x08\xa6\xa8\x0b\xf1\x7a\xe4\xc7\x83\xac\xef\x8d\xa3\xb0\x2c\x95\xbb\x98\xa6\x3f\xbf\xeb\x5b\xc0\xe0\x9d\xb8\xbe\x3d\xe9\x9d\xb8\x14\xed\xfc\xda\x91\x9d\xe0\xf0\x89\xd0\x9d\x64\x10\x08\x5d\x1f\x3d\x26\x82\xd3\x0c\x7e\xad\x85\x3a\xad\x02\xf2\x49\xc7\xa2\x23\x3b\xd1\xc7\xf2\xae\x8f\x5c\xaf\x3b\xcb\x3e\x45\x13\xf7\x9e\xec\x2a\x1e\x47\xca\x1f\x6c\x2e\x72\x77\xb5\x8d\xbd\x6d\xdb\x57\x5f\xe8\xe3\xdd\x8d\x96\x17\xdf\xba\xfa\xeb\x06\xf7\xa0\xca\x9f\x7b\xb2\x2f\xcc\xea\x4c\x2b\x66\x21\x7c\x70\x38\x5a\x9f\x9c\x90\x15\x8f\xf7\xb3\x9e\x9e\x46\x2d\xa1\x6b\x89\xfc\xf2\xae\x04\xc5\x39\x63\x8d\xde\x83\x90\x12\x29\xb5\xcd\x0a\xd3\x06\xf2\x45\xb7\xec\xfa\xbc\x12\x9a\xf0\xf3\xcb\x13\xd2\xba\xfb\x63\x07\x93\x77\x41\xfa\x24\x68\x17\xdf\x94\x0c\x3c\x82\x07\xda\x1b\x09\x4b\x6b\x37\x1b\xc4\x86\x33\xb6\x97\x31\x59\x2b\x3f\x99\x42\x8d\x82\x3d\xc5\xc5\x0e\x22\x3e\xf4\xda\x24\x0e\x0d\x79\x87\xa2\xee\xb3\xf9\x50\x1b\x66\x3d\x23\x2f\x3c\x5e\xad\x95\x7f\x3c\xe0\x06\x7f\xf7\x5d\xd4\xb3\x79\x20\x0c\x4c\x3a\x19\x93\xae\x5b\x67\x4c\x5e\x60\xb1\x2e\xa6\xf0\x2f\x64\xbc\xf3\x5a\xdb\x50\xbe\x2c\xe2\xea\xc5\xdb\x0d\xa6\xed\x89\x70\x5e\xc9\xa0\x85\xeb\xbc\xd8\x72\x39\x1c\x34\xad\xd4\xab\x1d\xf1\x43\x58\x32\xaf\x62\xc7\x7c\x8b\x9d\x75\x1b\xea\x9f\x40\x07\xd7\xa2\xa0\x2b\xb1\x94\x17\xdf\x5d\x1e\xff\x3f\x37\xf8\x1e\xdd\xf6\xc4\x2f\x19\x0c\xf6\x86\x29\xcb\xa9\xfa\x53\xde\xed\xc5\x86\xa7\x44\x8a\x15\xa1\xcf\x7e\x1e\x79\x9e\xfd\xc2\x92\xfd\x54\xc2\x26\xc6\x95\x5f\x04\x5c\x45\x06\x40\x66\x33\xad\xc8\xa3\x99\xb5\x2a\x5c\x2d\x2e\xcf\x2f\x2f\xce\xda\x3a\x7e\x55\x96\x2a\x3d\x76\xb9\x95\xbf\x62\x10\x35\x6a\x99\xc3\xf9\x30\xcf\x1f\x1e\xc0\xc5\xc1\xf0\x95\xdb\xb3\xf8\x3b\xd5\xa8\xf4\x0f\x37\x36\xcf\xe0\x43\xd3\xb2\x7f\x73\x7b\xdf\x0d\x62\x9a\xf6\xfb\xab\x76\x2c\x83\x29\xad\xa7\x6e\x3d\x56\x8b\x7d\x5c\x12\xe8\xed\xb0\xf0\x32\xa4\xad\xdd\x84\x06\x14\x51\x40\x02\x6b\x80\x6c\x8d\xf0\x2e\x2c\xd1\x19\xf4\x18\x97\x65\xa1\xa1\x61\xcb\x58\x1a\xea\xf6\x10\x93\x5b\x6b\x70\x92\x9f\x24\x58\x97\xef\x19\x93\x70\x1a\xaf\x1e\x3b\x80\x17\xf5\x1b\x9d\xf4\xd8\x77\x72\x31\x39\xfb\x5f\x00\x00\x00\xff\xff\xd5\x99\xa9\x17\x11\x1c\x00\x00"),
		},
		"/flux-secret.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-secret.yaml.tmpl",
			modTime:          time.Date(2019, 9, 24, 0, 10, 37, 897094638, time.UTC),
			uncompressedSize: 137,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xca\x31\x0a\xc2\x40\x10\x85\xe1\x7e\x4f\xf1\x2e\xb0\x82\xed\x1c\x42\x0b\xc1\x7e\xc8\xbe\xc8\x62\xb2\x19\x93\x89\x18\x86\xdc\x5d\x14\x1b\xcb\x9f\xff\xcb\x39\x27\xb5\x7a\xe5\xbc\xd4\xa9\x09\x9e\xc7\x74\xaf\xad\x08\x2e\xec\x66\x7a\x1a\xe9\x5a\xd4\x55\x12\xd0\x74\xa4\xa0\x1f\xd6\x57\xbe\x55\xcf\x85\x36\x4c\x5b\x04\x6a\x8f\xc3\x49\x47\x2e\xa6\x1d\xb1\xef\x3f\xfa\x4d\x41\xc4\xff\x8d\x00\x5b\xf9\x30\xdf\x8c\x82\xb3\xe9\x63\x65\x7a\x07\x00\x00\xff\xff\x40\x21\xa1\xbb\x89\x00\x00\x00"),
		},
		"/memcache-dep.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "memcache-dep.yaml.tmpl",
			modTime:          time.Date(2019, 9, 24, 0, 10, 37, 897094638, time.UTC),
			uncompressedSize: 874,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x93\xcd\x6e\x9c\x40\x10\x84\xef\x3c\x45\x49\x7b\x0d\x1b\x61\x69\x2f\xdc\xa2\x38\x89\x2c\x25\xd6\x5e\x9c\x7b\x7b\x68\xf0\x28\xf3\x97\xe9\x66\xb3\x04\xf9\xdd\xa3\xd9\x5f\x36\xf6\x9c\x80\xaa\xaf\xa7\xa6\x80\xba\xae\xab\x15\x3c\x7b\x43\xe6\x85\x3b\x74\x9c\x5c\x9c\x3c\x07\xc5\x28\xdc\xe1\x79\xc2\x57\x37\xee\xa1\x11\x07\x47\xb5\x82\x89\x41\xc9\x06\xce\xb0\x9e\x06\x86\x67\xa5\x8e\x94\xd6\x15\x25\xfb\x93\xb3\xd8\x18\x5a\x50\x4a\xf2\x71\xd7\x54\xbf\x6c\xe8\x5a\xdc\x5f\xc6\x56\x67\x7b\x5b\x01\x81\x3c\xb7\xd7\xdd\xe7\x19\xb6\xc7\xfa\x91\x3c\x4b\x22\xc3\x78\x7d\x3d\x99\x0e\xb7\x2d\xe6\xf9\x56\x9d\x67\x70\xe8\x8a\x4d\x12\x9b\x32\x31\x73\x72\xd6\x90\xb4\x68\x2a\x40\xd8\xb1\xd1\x98\x8b\x02\x78\x52\xf3\xf2\x9d\x9e\xd9\xc9\xf1\xc1\x9b\x00\x15\xa0\xec\x93\x23\xe5\x13\xb2\x08\x5b\x96\xbb\xa1\xdf\xe3\x81\x73\x94\xb2\x2e\x5d\x5d\x98\xfa\x5d\xa6\xac\x43\x9b\x0b\xa1\x6d\xd6\x9b\x75\xb3\xb9\xd5\xb7\xa3\x73\xdb\xe8\xac\x99\x5a\x3c\xf4\x8f\x51\xb7\x99\xa5\xd4\x7a\x76\x51\x1e\x16\xf9\x6a\xd4\x1e\x9b\xe6\x0e\xc0\x0a\x3f\x68\x6f\xfd\xe8\xcb\x0e\x31\x4f\xe5\x95\x8e\xc2\x1f\x60\x03\x3c\x0f\xf4\x3c\x29\xcb\x12\x7c\xc0\xc6\xe3\x06\x14\xfb\x97\xd1\xc7\x8c\x18\x18\x56\xd9\x2f\xed\x09\x4d\x73\xd7\x34\x58\xe1\x9e\x7b\x1a\x9d\x22\xc5\x7c\xcd\xb5\x2a\x9e\xdd\xee\x78\xf9\x14\x4c\xf4\x87\x8f\x4c\x23\x06\x56\xb8\x38\x08\x62\x0f\x26\xf3\x82\xcc\xbf\x47\x16\x05\x85\x0e\x99\x25\xc5\x20\xbc\xbe\x0c\x2a\x53\x6f\x4e\x78\xec\xd3\x38\xcb\x41\xaf\x07\x58\x74\xbf\x8d\x59\xdb\x63\xba\x8b\x2c\x6c\xc6\x6c\x75\xfa\x1c\x83\xf2\x5e\xdb\x05\x97\xc7\xf0\x49\x9e\x84\xf3\xff\xcc\x49\xfa\x96\xe3\x98\xde\x6a\xe4\x5c\xfc\xb3\xcd\x76\x67\x1d\x0f\xfc\x45\x0c\x39\xd2\xc3\xaf\xd0\x93\x13\xae\xfe\x05\x00\x00\xff\xff\x5d\x9a\x63\xab\x6a\x03\x00\x00"),
		},
		"/memcache-svc.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "memcache-svc.yaml.tmpl",
			modTime:          time.Date(2019, 9, 24, 0, 10, 37, 897094638, time.UTC),
			uncompressedSize: 206,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8c\x3d\x0e\x02\x21\x10\x46\x7b\x4e\xf1\x5d\x00\x13\x2c\x39\x84\x8d\x89\xfd\x04\x3e\x23\x51\x58\x02\x64\x9b\xc9\xde\xdd\xb0\x6b\xe3\x76\xf3\xf3\xde\xb3\xd6\x1a\xa9\xe9\xc1\xd6\xd3\x52\x3c\x56\x67\xde\xa9\x44\x8f\x3b\xdb\x9a\x02\x4d\xe6\x90\x28\x43\xbc\x01\x8a\x64\x7a\x64\xe6\x20\xe1\xc5\xa8\x8a\xf4\xc4\xe5\x26\x99\xbd\x4a\x20\xb6\xed\x07\xed\xab\x87\xea\xff\x57\x15\x2c\x71\x62\xbd\x32\xcc\x62\x5d\xda\xe8\x73\x00\xec\x39\xbf\x5f\x0f\xc4\xc3\xb9\xab\x73\x06\xe8\xfc\x30\x8c\xa5\x1d\xce\xd9\xf8\x06\x00\x00\xff\xff\x20\x2f\xef\xba\xce\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/flux-account.yaml.tmpl"].(os.FileInfo),
		fs["/flux-config-configmap.yaml.tmpl"].(os.FileInfo),
		fs["/flux-config-secret.yaml.tmpl"].(os.FileInfo),
		fs["/flux-deployment.yaml.tmpl"].(os.FileInfo),
		fs["/flux-secret.yaml.tmpl"].(os.FileInfo),
		fs["/memcache-dep.yaml.tmpl"].(os.FileInfo),
		fs["/memcache-svc.yaml.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}

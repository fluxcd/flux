// Code generated by vfsgen; DO NOT EDIT.

package install

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// templates statically implements the virtual filesystem provided to vfsgen.
var templates = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
		},
		"/flux-account.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-account.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 836,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x4b\xaf\xd3\x30\x10\x85\xf7\xfe\x15\x47\xba\x8b\x0b\xe8\x26\xa8\x3b\x94\x5d\xdb\x05\x0b\x10\x8b\xf0\xd8\x20\x16\x63\x7b\x42\x4d\x5d\x3b\xf2\x23\x3c\xa2\xfc\x77\x94\xa4\x95\x9a\xb6\x20\x55\xba\x3b\x7b\x7c\xc6\x73\xe6\xe8\x2b\x8a\x42\x3c\xe0\xd3\x8e\x11\x39\x74\x46\x31\x48\x29\x9f\x5d\x7a\x82\xb2\x39\x26\x0e\x08\xde\x72\x7c\x02\x39\xbd\x28\x41\x1a\xa7\x8d\xfb\x0e\x0a\x2c\x1e\xe0\x9d\xfd\x0d\xc7\xac\x59\xa3\xf1\x01\xef\xb2\xe4\xe0\x38\x71\xc4\x4f\x93\x76\x53\x4b\x21\x29\xb2\x1e\x27\x70\x8c\x50\xde\xa5\xe0\x2d\x5e\xd4\x9b\xf5\xf6\x65\x29\xa8\x35\x5f\x38\x44\xe3\x5d\x85\x6e\x25\xf6\xc6\xe9\x0a\x1f\x67\x57\xeb\xd9\x94\x38\x70\x22\x4d\x89\x2a\x01\x58\x92\x6c\xe3\x78\x02\x1c\x1d\xb8\x42\x63\xf3\x2f\x71\x7e\xe9\x7b\x98\x06\xe5\x07\x3a\x70\x6c\x49\x31\x86\xe1\xf8\x3e\x5d\x2b\xf4\xfd\xf2\xb5\xef\xc1\x4e\x0f\x83\x18\x73\x39\x37\x14\x24\xa9\x92\x72\xda\xf9\x60\xfe\x50\x32\xde\x95\xfb\x37\xb1\x34\xfe\x75\xb7\x92\x9c\xe8\xe4\x77\x3b\x27\x54\x7b\xcb\xf7\x9a\x15\x21\x5b\x9e\x24\x05\xa8\x35\x6f\x83\xcf\x6d\xac\xf0\xf5\xf1\xd5\xe3\xb7\xa9\x2f\x70\xf4\x39\x28\x5e\x14\x3b\x0e\xf2\xac\x50\xc0\x79\x57\x1f\x85\x9f\xeb\xf7\xff\xd6\x3e\xc3\x86\x9b\x99\x80\xfb\x17\xf5\x96\x6b\x6e\x46\xd1\x69\xd1\xff\xcc\x17\xc0\x75\xb6\x8b\xff\x62\x96\x3f\x58\xa5\x63\x76\x37\xc1\xb9\xb2\x73\x89\xc1\x25\x27\xb7\xc8\xb0\x71\x3c\x69\x6e\x28\xdb\x34\xa3\x32\x12\xf5\x37\x00\x00\xff\xff\xfd\x7f\x67\x6a\x44\x03\x00\x00"),
		},
		"/flux-config-configmap.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-config-configmap.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 520,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\xc1\x6b\xeb\x30\x0c\xc6\xef\xfe\x2b\x3e\x1a\xde\xad\x09\xbc\x77\xcc\xed\x51\x18\xec\xb0\x5d\x36\x76\x17\xb1\xdc\x8a\x25\x76\xb0\x95\x76\xe0\xf5\x7f\x1f\x4e\x52\xb2\x8e\x9d\xa2\x58\xfa\x3e\xfd\x24\xe5\x0c\x71\x20\x6f\xd1\x1c\x82\x77\x72\x7c\x90\x9e\x0f\xc1\x2b\x7b\xbd\x3d\xfd\x4f\xcb\xf7\x89\x46\x5c\xaf\xa6\xc2\xeb\x89\xe1\x42\xdf\x87\x8b\xf8\x23\xb6\xa4\x24\x4c\x89\x2d\x34\x60\x8c\xe1\x2c\x96\x41\xe8\xe6\xf4\x14\x49\x25\x78\xb8\x10\xe1\xfa\xe9\xc3\x36\xab\xcf\x0b\x77\x91\xb5\x48\xbb\xc8\xa4\x6c\x0b\x8f\x9e\x18\x75\xbd\x28\x6b\x27\x3d\xa3\x0b\xc3\x50\x28\x7b\xf1\x6c\x2a\x84\x71\x76\x93\x74\x6b\x64\x1b\x3c\xba\x4d\x43\x69\x8d\x86\x05\x2b\xb1\x16\x2a\x8d\x13\xef\x8b\xbb\xa9\x7e\x70\x7d\xeb\x4f\x09\xb4\x0d\xb5\x47\xd0\x13\xc7\x8b\x24\x86\xe8\x7d\x9d\xa9\x40\xeb\x00\x8d\xa9\xeb\xda\xd0\x28\x6f\x1c\x93\x04\xdf\xe2\xfc\xd7\xbc\x8b\xb7\xed\x66\x65\x06\x56\xb2\xa4\xd4\x1a\xc0\xd3\xc0\xed\xbc\x8a\x95\x74\xb9\x44\xf3\x4c\x03\xa7\x91\x3a\x2e\xab\x5e\xca\xe6\xdf\x16\x39\xdf\x67\x73\x06\x7b\x5b\xca\x66\x4f\x98\x9c\x6b\x8c\x51\xbc\x3a\xec\xfe\xa4\xdd\x6f\x17\xfd\x84\x17\x6f\x4b\xf4\xaf\x08\x37\x8b\xaf\x00\x00\x00\xff\xff\x0c\x93\x80\xc8\x08\x02\x00\x00"),
		},
		"/flux-config-secret.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-config-secret.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 532,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\xcf\xea\x13\x31\x10\xbe\xe7\x29\x3e\xba\x08\x0a\xdd\x05\x3d\xee\x4d\x0a\x82\x07\xf5\xa0\x78\x1f\x36\x93\x76\x70\x37\x89\xc9\x6c\xab\xc4\xbe\xbb\x64\x77\xdb\x5a\xf9\x9d\x32\x49\xbe\x7f\x33\x53\x0a\xc4\x81\xbc\x45\x77\x08\xde\xc9\xf1\x83\x8c\x7c\x08\x5e\xd9\x2b\x5e\xfb\xa0\xb7\xf7\xf7\x79\x3d\x3f\x51\x7c\x83\xeb\xd5\x34\xf8\x76\x62\xb8\x30\x8e\xe1\x22\xfe\x88\xaf\x3c\x24\x56\x48\xc6\x9c\xd9\x42\x03\x62\x0a\x67\xb1\x0c\xc2\xb0\x30\xe7\x44\x2a\xc1\xc3\x85\x04\x37\xce\xbf\x6c\xb7\x89\x3c\xa8\x43\x62\x52\xb6\x35\x92\x9e\x18\x6d\xbb\x32\x5b\x27\x23\x63\x08\xd3\x54\x83\x8e\xe2\xd9\x34\x08\x71\x51\x93\x7c\x33\xb2\x1d\x3e\xba\x07\x87\xf2\x56\x4d\x14\x2b\x2a\xb3\xd6\x54\x9a\x66\xde\x57\x75\xd3\xfc\x97\xeb\x1f\x7f\xca\x20\xdc\xfb\xdd\x23\xe8\x89\xd3\x45\x32\x43\xf4\x19\x67\x1a\xd0\xd6\x40\x67\xda\xb6\x35\x14\xe5\x3b\xa7\x2c\xc1\xf7\x38\xbf\x35\x3f\xc4\xdb\x7e\x03\x98\x89\x95\x2c\x29\xf5\x06\xf0\x34\x71\xbf\xcc\x61\x8b\xb9\x6e\xa2\xfb\x4c\x13\xe7\x48\x03\xd7\x21\xaf\xb0\xe5\xda\xa3\x94\xe7\xdf\x52\xc0\xde\x56\x98\xfe\x8e\xdc\xe3\x4b\xa4\x9f\x33\x9b\xc5\x00\xa6\x94\x16\x31\x89\x57\x87\xdd\xab\xbc\x7b\x69\xbd\x7f\xe0\xc5\xdb\x5a\xbd\xab\x2a\x77\xbd\xbf\x01\x00\x00\xff\xff\xf6\x3e\x1d\x20\x14\x02\x00\x00"),
		},
		"/flux-deployment.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-deployment.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 7604,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xdb\x8e\x1b\x37\xd2\xbe\x9f\xa7\x28\xc8\x3f\x60\x0f\x20\xb5\x66\x32\x49\xf0\xa3\xb3\x13\xac\xe3\xc3\x64\xd6\xb1\x33\xf0\xd8\xbb\xc8\x55\x86\x62\x97\xd4\x84\xd8\x64\x2f\x8b\x2d\x45\x18\xe4\xdd\x17\x45\xf6\x81\x2d\x69\x0e\x9b\xbb\xcd\x45\x6c\xb3\xc9\x62\xd5\x57\xa7\x8f\xa5\xd9\x6c\x76\x22\x6a\xf5\x4f\x74\xa4\xac\xc9\x41\xd4\x35\xcd\x37\xe7\x27\x6b\x65\x8a\x1c\xde\x62\xad\xed\xae\x42\xe3\x4f\x2a\xf4\xa2\x10\x5e\xe4\x27\x00\x46\x54\x98\xc3\x52\x37\x7f\xdc\xdf\x83\x5a\x42\xf6\x49\x54\x48\xb5\x90\x08\x7f\xfe\xd9\x7e\x0f\xff\xcc\xe1\xfe\x7e\xfc\xf5\xfe\x1e\xd0\x14\xbc\x8d\x6a\x94\x2c\xcc\x61\xad\x95\x14\x94\xc3\xf9\x09\x00\xa1\x46\xe9\xad\xe3\x2f\x00\x95\xf0\xb2\xfc\x45\x2c\x50\x53\x5c\x48\xef\xe6\xdd\xde\x09\x8f\xab\x5d\xfc\xe8\x77\x35\xe6\xf0\x19\xa5\x43\xe1\xf1\x04\xc0\x63\x55\x6b\xe1\xb1\x15\x96\x58\xc0\xff\x09\x63\xac\x17\x5e\x59\xd3\x0b\x07\xa8\x9d\xad\xd0\x97\xd8\x50\xa6\xec\xbc\xb6\xce\xe7\x30\xb9\x38\xbb\x38\x9f\xc0\x0b\xf0\xa8\x75\xb2\x03\xbc\x05\x92\x4e\xd4\x08\xf3\x0a\xbd\x53\x92\xd8\xb8\xda\x2a\xe3\x5f\x12\xf0\xe1\xac\x15\xac\x47\x36\xec\x59\x01\xd0\x61\x11\xfe\x8e\x6e\xa3\x24\xbe\x96\xd2\x36\xc6\x7f\x1a\x6f\x04\xd8\x58\xdd\x54\xd8\x8b\x9a\xb5\xa2\x56\xca\xcf\xd6\xb8\xeb\x2f\x20\x46\xc1\x0f\x17\x76\x2b\x83\xbc\x19\x1f\x29\x82\x83\x93\x5d\x05\x2e\x45\xa3\xfd\x47\x5b\x60\x0e\x67\xdf\x9e\x9d\xc1\x0b\xd8\x96\x68\xa0\x62\x6d\xb0\x00\x87\xa2\x98\x59\xa3\x77\x53\xd8\x22\x6c\xad\x79\xe9\x61\x81\x20\x16\x1a\x19\x0f\x59\x56\xb6\x38\x69\x05\xbe\x80\x2f\xa5\x22\x50\x04\x02\x7c\x55\x2f\x09\x1a\xc2\x02\x96\xd6\xc1\x0a\x0d\x3a\xe1\x95\x59\xc1\xed\xed\xcf\xb0\xc6\x1d\x65\x70\x6d\xe0\xc3\xff\x13\xfc\x78\x09\xe7\xd9\xf9\xd9\xb4\x97\xd2\xdd\x1d\x4d\x20\x10\x0e\x53\x3d\xc8\xb2\x2a\x06\xb1\x00\x01\x84\xb5\xe0\xa0\x68\x81\x82\x2d\xf6\x62\xa4\x30\xb0\x75\xca\xb3\xa2\xd9\x71\xfc\x56\x68\x7a\x30\xb0\xaa\xfd\xee\xad\x72\x29\x88\x15\x16\xaa\xa9\x72\xf8\x88\x95\x75\xbb\xd4\x4e\x84\xa5\xd5\xda\x6e\xd9\xa2\xf6\x6a\x45\xc1\xd4\x86\x78\x4d\x80\x6c\xc8\xdb\x4a\x31\x02\x6b\x63\xb7\xe6\xf7\xd2\x92\xa7\x5e\xc4\x52\x69\x9c\xc2\xb6\x54\xb2\x84\x9d\x6d\x60\xab\xb4\x8e\x46\x79\x0b\x85\xe5\x3c\xe3\x65\x3e\xc4\x7f\x71\x60\xb7\x86\xd5\xee\x05\x38\xac\x2d\x38\xe1\x4b\x74\xe0\x4b\x61\xda\x8b\x57\xca\x97\xcd\x02\x2c\x2f\x22\x68\xb5\xc6\x0c\x7e\xb3\xcd\x4b\xad\x41\x68\xb2\xdd\x15\x63\xb0\x41\x79\x50\xc6\xdb\x70\x46\x5a\xe3\x85\x32\xe8\xa6\xb0\x40\x6d\xb7\x19\xdc\xe2\x80\x6a\xe9\x7d\x4d\xf9\x7c\x5e\x58\x49\x19\x07\x96\x2c\x38\x75\xd0\xcc\x39\xf5\xc8\xcf\x57\x8d\x2a\x90\xe6\x0d\xe1\xac\x76\x6a\x23\x3c\x86\xd0\x63\x43\xb2\xd2\x57\xba\x97\xd4\xf9\x82\xa8\x9c\x49\x6b\x96\x6a\xd5\x7f\x02\x88\x0b\x1f\x45\x9d\x27\x8b\x69\x22\xcd\x92\x63\x7f\xd5\x2f\xd9\xba\x59\xe0\x3c\x0a\x19\xc2\xef\x49\x9f\x6c\x15\x95\xbc\x52\x8a\x0d\x82\x80\x42\x2d\x97\xe8\xb8\x68\x76\x12\xda\xac\x1a\x0a\x63\x70\x41\x14\x97\x3a\x81\x8b\xcb\x46\x15\xd8\xc1\xbe\x54\xab\x4a\xd4\x83\x22\xca\x97\x20\x0c\xa0\xf1\x6e\x17\x6c\xb8\x8b\x9b\xee\xa6\x20\x4c\x01\x8d\x91\xb6\xe2\x6a\x1d\xce\x47\x6b\x3f\x06\x77\x0a\x53\xf4\x52\xd0\x6c\x82\x04\x85\xd4\xfa\xf3\xc0\x03\x0c\xc3\x5f\xf0\x40\x72\xec\x49\x0f\x84\x4a\xe0\x2d\xa8\x8a\xeb\x24\x5c\xdd\x5c\x85\x22\x00\xaf\xd8\x2c\x52\x2b\xa3\xcc\x70\x39\x1b\xb7\x41\xa7\x96\x4a\x86\x82\x0d\x75\xe3\x6a\x4b\x48\xa7\xcf\x00\xb2\x97\x12\xcb\x47\x44\x91\x01\xe2\xfb\x9e\x01\x1c\x08\xb7\x1a\xd2\xf4\x01\xc4\x56\xf5\x8a\xeb\x07\x25\xd0\x8c\x4b\xf0\x8b\x07\x8a\xf0\xe1\xb9\x23\x45\xf8\xd9\x68\x76\x66\x8b\xd6\x5b\x8d\x8b\x78\x31\xa8\x7c\x5f\x31\x92\x34\x9c\x8f\x2d\xb3\xe0\x80\x66\x04\x66\x6d\x22\xcd\xb8\x28\x01\x63\xc3\x38\x68\x65\x06\x30\x6d\x1d\x04\x2b\xea\xee\x2c\x32\xb8\x5e\x0e\x27\x05\xcd\xfa\x00\xe6\x5d\x84\x9e\x15\xf4\xae\xc1\xe9\xc8\x2b\x63\x45\x13\x5d\x04\xb7\x8d\x37\x5d\xd0\x4d\xc1\x72\x65\xdb\x2a\xc2\x50\x9c\xd2\x7d\x43\x9c\xc0\x6d\x00\xb8\xf3\x4f\xa4\x27\xac\x7b\x16\x05\xbd\x57\x1a\xdf\x58\xe3\xd9\xd5\xed\xd2\x6b\xea\xef\x88\xec\x25\x6d\x0b\xc1\x47\xad\x45\x11\xad\xbe\x19\x1c\xa4\xc3\x5e\x32\x8c\xf2\x67\xa0\x3d\xcf\x50\xec\x95\xb1\xc7\xb4\x3b\xfd\xaf\xd4\x7b\x06\x01\x78\x40\xc3\x2e\x77\xfb\xb2\x7f\x40\x36\x12\x3a\xd2\x86\x92\xc3\xd0\x94\x8d\x85\x49\x1e\xcb\xfe\x04\x54\x25\x56\x48\x7d\xe8\x65\xf0\x5e\x99\x22\x84\x57\xc5\x3d\xcc\xa1\x1c\x4a\x64\xec\x5f\x1a\x05\x21\x77\xaa\x70\x94\x33\x9e\x49\x29\x08\xdf\x37\x99\xb2\x59\x64\x85\x95\x6b\x74\x99\xb4\xd5\xdc\xcd\x63\xc3\x09\x7f\xcc\xbd\xe8\xf3\xb4\x2b\x1a\x4c\x2e\x99\x78\xf2\xad\x5e\xac\x80\x35\xcd\xfa\x3d\xe1\x9a\x68\x4e\x2b\xa3\x55\x7e\xbc\xe3\xa6\xd1\xfa\xc6\x6a\x25\x77\x39\x5c\x2f\x3f\x59\x7f\xe3\x90\x52\xdd\x1d\x92\x6d\x9c\x44\x4a\xe1\x76\xf8\xef\x06\xc9\x8f\xd6\x00\x64\xdd\xe4\xf0\xdd\x59\x35\x5a\xac\x02\x9b\xc8\xe1\xfb\x6f\x3f\xaa\x81\x89\x5a\x97\x1e\x9e\x0d\xfe\xb8\x09\xac\xf4\xe2\xec\x82\xc9\x99\x32\x4b\xeb\xaa\x90\x3c\x42\xf7\xbb\xb5\xda\xa0\x41\xa2\x1b\x67\x17\x98\x6a\xc0\x40\x5e\x8d\xe3\x22\x5e\x15\x05\x8e\x97\x85\x2f\x73\x98\x8b\x5a\x45\x7c\x37\xdf\xcf\x55\x81\xc6\x2b\xbf\xcb\xea\x66\x91\xec\x55\x46\x79\x25\xf4\x5b\xd4\x62\x77\xcb\x2d\xa0\xa0\x1c\xbe\x4b\x36\x78\x55\xa1\x6d\xfc\x91\x6f\xcc\xe3\xd4\xff\x86\xaa\x49\x5f\x18\x39\xe6\x38\x03\x87\xc8\xa4\x6e\xa2\x66\xe8\x65\xd0\xac\x98\x13\x95\xfc\x94\xb0\xf1\x71\x03\xda\xb6\x2d\x6d\xc5\x2e\x03\x65\x62\xcc\xbd\xa4\x78\x86\xa8\x9c\x8f\xf2\xb4\xc3\xec\x57\xa3\x77\x79\x28\xa7\x2c\x8d\x69\x76\x68\x82\x8b\x96\x3b\x70\x22\xd5\xe8\x96\xd6\x49\x64\xa1\x91\x57\x33\xad\x7e\x48\xf1\x94\xfa\x8e\x75\xdf\x08\xd7\xea\x1e\xb7\xfd\x35\xf5\x93\xcc\xbc\x36\x52\x37\xa1\x39\xf3\xeb\x20\x72\xa8\xae\x71\x47\xfa\xf9\x04\x5b\xee\xf8\xf2\x0f\x7c\x74\x8f\xc9\x0e\x7d\xad\x40\xa9\x85\xe3\x0e\xb1\xb0\x9b\x24\xed\x1f\x61\x9a\xb1\x03\xa7\xc6\x3b\x6b\xfd\x3c\x23\x2a\x1f\x34\x40\x98\xd1\xad\x93\x81\x05\x4d\xe2\xcd\xd3\x6e\x4b\x22\x01\xcd\x46\x39\x6b\x02\xe7\x88\x74\x6e\xf2\xe1\xeb\x4f\xef\xde\xfc\xfa\xe9\xfd\xf5\xd5\x24\xb2\x8c\x29\xe3\x61\x37\xe8\xdc\x98\x12\x26\x62\x42\xdf\x5f\xec\x22\x61\xf3\xfa\x98\x8d\x07\x5c\xee\xd0\xc6\x21\x38\x79\xf3\x83\x86\x32\xbf\xe0\xb7\x6d\x77\x1b\x17\xe6\x84\xed\xb6\xda\x05\x9f\x24\x22\xf6\x39\x73\xea\xf4\x40\x98\xbb\xd7\x9d\x30\x20\xb4\x47\x67\xf8\xf5\x76\xa0\xf1\xd2\xd9\xaa\xa7\x35\x15\xf3\x01\x41\x1c\x6e\x2d\x71\x63\x18\xb4\x95\x6b\x3a\x74\x36\x9a\x4d\x7e\x04\x97\x01\xee\x11\x2e\x1b\xa1\x1b\x3c\xc0\xe4\xa9\x20\xde\x8f\x81\x8e\xd6\x3d\x12\x01\xcc\x2a\xc7\x6c\xf2\x11\x3e\xf9\x40\x5c\xf2\xae\x48\xa0\x47\xfb\xc6\xf5\xa1\xff\xd4\x0e\x6b\x0e\x09\x47\xcf\x2b\x9e\xc5\x2c\x1e\x88\x9d\xf4\x9a\x8e\x49\x3c\x9e\xf2\x5b\x61\x02\x27\xa4\xa6\xae\xf5\x0e\x7e\xfe\xf2\xe5\x06\x16\x82\x94\x04\xd1\xf8\x92\xf9\x5d\x28\xe1\x42\x47\x12\x31\xbc\x75\x59\xe0\x46\x89\x80\xf8\xdd\xd5\xf5\x97\xdf\x5f\x7f\xfd\xf2\xf3\xd7\xdb\x77\x9f\xef\x02\xce\xfd\xd2\x87\x77\xbf\xdd\x8d\x32\x6d\x23\x9c\x12\x0b\x8d\xd4\x3d\xfe\x12\x81\x34\x62\x8e\x6d\xe0\xbc\x77\xb6\x1a\x07\x4f\xdc\xf6\x19\x97\xf9\x08\xf2\x11\xf5\xe3\x8a\xca\x26\x0c\x00\xb0\xb3\xf3\x11\x1e\x11\x82\x38\x7f\xc1\x82\x29\x80\x14\xb2\x64\x0a\x6e\x46\x49\xd5\x3f\x19\x19\x29\x96\x3e\x4d\xa4\x58\xd7\xbe\x09\x93\x03\xed\xfc\x28\x1c\x9c\x86\x4b\xa4\x30\x1d\xc6\xbe\x44\x4a\x83\x70\x78\x4b\xf8\xad\x65\x2d\x1b\xc6\x29\xa4\x7a\x18\x76\x05\xcf\x42\x69\xb7\x61\xb6\x63\x8d\x41\x19\x5c\xa6\xfc\x38\x68\x67\xb3\xde\x80\xf0\xb0\xe7\xcb\x2f\xfb\xa5\xac\x7d\xd0\x64\xb4\x91\x99\xd4\x0d\x79\x74\x19\x77\x0e\x9d\x42\xf2\x95\x62\x91\x1b\xa0\x78\x13\xb7\x5e\xdf\x8c\x8c\xe2\x7a\x47\xe8\xc3\xec\x68\x9c\x52\x83\x0e\xdd\x7e\x8e\x2e\xef\x78\x67\x98\xe6\x24\x61\x9e\x6a\xdc\xee\xbe\x3c\x19\x91\x5a\x45\x50\x35\x14\xa6\x5b\x01\x3d\x85\x45\xcc\xe3\x45\xe8\xa8\x81\x52\x86\xa1\xd6\xab\x6e\x52\x74\x9a\xea\xd2\x55\xb5\x98\xff\x1c\xc0\xc9\x6c\x6b\xa4\x08\x77\xa1\xd8\x59\x67\x85\x72\x97\x07\xfd\x36\x55\xeb\x73\x42\x68\x07\xe7\x7d\xfd\xfc\x4b\x1c\xbe\x09\xb3\x8a\xdf\xae\x94\x0f\x03\x21\x52\xde\xba\x5d\xdf\x27\xde\x33\x11\x4f\xc4\x3d\x96\x73\x1c\x36\x89\xed\x6d\xca\x1c\x4d\xa7\x34\x17\x3a\xaa\xfe\x7f\xaf\xd2\xcc\x3c\xcd\x87\x7f\x7f\x78\xf7\xdb\xe9\xdf\xe3\x58\x2a\xb0\xf8\x86\xd0\xcd\x07\x65\xb3\x34\xd1\x19\x1f\x4e\xa7\xc6\xe9\xcb\xfb\x7b\xc8\xae\x94\x67\x63\x47\x15\x2b\xee\x58\x38\x61\x64\xd9\x6d\xfa\x29\xfc\x2b\x0e\x9c\xb9\xe8\x5d\xa9\x50\xb0\xe8\xd8\x49\x26\x8f\x7c\xee\x36\x44\x0a\xfd\xc3\x2a\x93\x1c\x98\x4c\x27\xed\xdc\x5a\x13\xa6\xc7\x1f\x2f\x6a\x0e\x39\xf0\x64\x9c\x28\x54\xc2\xa8\x25\x3f\x06\x38\x87\x48\x15\xe8\xa2\x3b\xf6\x1e\x52\x61\xde\x66\x09\xa1\x31\x05\xba\x3d\x1f\x3b\xd4\xc2\xab\x0d\x06\xae\x4b\x5d\x04\xae\x46\x7e\xde\xcb\xc9\xde\x38\x6a\x16\x85\x72\xe7\xd3\xf8\xe7\x37\x7d\x85\x1e\xc0\x09\x43\xf6\x63\xe0\x84\xc9\x75\x87\x6a\xb7\xeb\x88\x80\xaf\x84\xee\xd8\x79\x76\x6e\xef\x39\xde\x03\xc7\xcf\xbf\xab\x84\x3a\xaa\x00\xf2\x87\x4e\x42\xb7\xeb\x89\x1e\x83\x5c\x4a\xb6\x96\x01\x45\x13\x46\xd3\x8c\x13\x53\x05\xe5\xf7\x86\x4b\x29\x56\x6d\xd3\x6d\x5b\xea\xe5\x23\x3d\xb6\x3b\xd1\xca\xe2\x53\x97\x7f\x5b\xe3\x0e\x54\xf1\x63\xbf\xed\x11\x1e\x95\x68\xc5\x22\x84\x6f\x1c\x8e\x26\x5c\x47\xee\x0a\x9f\x77\xb3\x7e\x3f\x8d\xca\x55\x57\xad\x41\x79\x28\x05\x05\x0e\x60\x8d\xde\x81\x90\x12\x29\x56\xf4\x12\xe3\x90\xf8\x55\x37\x8f\xbc\x5b\x0a\x4d\x78\x77\x7a\xe4\xb6\xee\xfc\x18\x60\xf2\xae\x91\x3e\x5e\xb4\x0d\xcf\x7e\x26\x85\x8d\x07\xda\x19\x09\x0b\x6b\xd7\x6b\xc4\x9a\xc3\xb5\xbf\x63\xb2\x52\x7e\x32\x85\x0a\x05\x23\xc5\x95\x08\x44\x78\x8b\xb7\x11\xdc\xd4\xe4\x1d\x8a\xaa\x0f\xe5\x7d\x6d\x58\xf4\x8c\xbc\xf0\x78\xc9\x95\xe1\x41\x87\x1b\xfc\xc3\x77\x5e\x4f\x5a\x95\x30\x30\xe9\xee\x98\x74\x8d\x24\x11\xf2\x0a\xb3\x55\x36\x85\x7f\x21\x73\xd1\x37\xda\x36\xc5\x69\x16\xa6\x63\xde\xae\x31\x0e\xb8\x84\xf3\x4a\x36\x5a\xb8\x0e\xc5\x56\xca\x7e\x0f\x6c\x6f\xbd\xdc\x12\x17\x40\xc9\xb2\xb2\x2d\xcb\xcd\xb6\xd6\xad\xa9\x7f\x9e\xee\x1d\x0b\x17\x5d\x8a\x85\x3c\xff\xe6\xe2\xf0\xff\xa9\xc1\xb7\xe8\x36\x47\x7e\x6c\x62\x22\x3e\x10\x00\x0e\xd5\x1f\xd2\x4e\x24\xd6\x5c\xc5\xa3\xaf\x08\x7d\xf2\x0b\xd6\xcb\xe4\x47\xb0\xe4\xd7\x2c\x36\x31\x4c\x65\x03\x19\xce\x46\x29\xa9\x15\x79\x34\xb3\x56\x85\xcb\xfc\xe2\xec\xe2\xfc\xa4\x4d\xe3\xd7\x45\xa1\xe2\x20\x82\xfb\xcc\x6b\x26\xb8\xa3\x7a\x39\x7c\x1f\xa8\xc6\xfd\x3d\xb8\xd0\xb5\x9e\x38\x3d\x0b\x3f\x25\x8e\x52\x7f\x7f\xa8\xf6\x02\x7e\xad\x5b\xf1\x6f\x3f\xdd\x76\x1c\x81\xa6\xfd\x88\xb1\x65\x0c\x60\x0a\xeb\xa9\x9b\x60\x56\x62\x17\x06\x38\x7a\x33\xcc\x24\x0d\x69\x6b\xd7\x4d\x0d\x8a\xa8\x41\x02\x6b\x80\x6c\x85\xf0\xa1\x59\xa0\x33\xe8\x31\xcc\x33\x9b\x9a\x86\x41\x70\x61\xa8\x9b\x11\x4d\x3e\x59\x83\x93\xf4\x4b\xa4\xdc\xe9\x28\x38\x5e\x4e\xe3\xe9\x70\x47\xbe\x83\x7e\xa3\x2f\xfd\xbb\x64\x72\x3e\x39\xf9\x4f\x00\x00\x00\xff\xff\x87\x97\x6a\x04\xb4\x1d\x00\x00"),
		},
		"/flux-secret.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-secret.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 137,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xca\x31\x0a\xc2\x40\x10\x85\xe1\x7e\x4f\xf1\x2e\xb0\x82\xed\x1c\x42\x0b\xc1\x7e\xc8\xbe\xc8\x62\xb2\x19\x93\x89\x18\x86\xdc\x5d\x14\x1b\xcb\x9f\xff\xcb\x39\x27\xb5\x7a\xe5\xbc\xd4\xa9\x09\x9e\xc7\x74\xaf\xad\x08\x2e\xec\x66\x7a\x1a\xe9\x5a\xd4\x55\x12\xd0\x74\xa4\xa0\x1f\xd6\x57\xbe\x55\xcf\x85\x36\x4c\x5b\x04\x6a\x8f\xc3\x49\x47\x2e\xa6\x1d\xb1\xef\x3f\xfa\x4d\x41\xc4\xff\x8d\x00\x5b\xf9\x30\xdf\x8c\x82\xb3\xe9\x63\x65\x7a\x07\x00\x00\xff\xff\x40\x21\xa1\xbb\x89\x00\x00\x00"),
		},
		"/memcache-dep.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "memcache-dep.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 874,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x93\xcd\x6e\x9c\x40\x10\x84\xef\x3c\x45\x49\x7b\x0d\x1b\x61\x69\x2f\xdc\xa2\x38\x89\x2c\x25\xd6\x5e\x9c\x7b\x7b\x68\xf0\x28\xf3\x97\xe9\x66\xb3\x04\xf9\xdd\xa3\xd9\x5f\x36\xf6\x9c\x80\xaa\xaf\xa7\xa6\x80\xba\xae\xab\x15\x3c\x7b\x43\xe6\x85\x3b\x74\x9c\x5c\x9c\x3c\x07\xc5\x28\xdc\xe1\x79\xc2\x57\x37\xee\xa1\x11\x07\x47\xb5\x82\x89\x41\xc9\x06\xce\xb0\x9e\x06\x86\x67\xa5\x8e\x94\xd6\x15\x25\xfb\x93\xb3\xd8\x18\x5a\x50\x4a\xf2\x71\xd7\x54\xbf\x6c\xe8\x5a\xdc\x5f\xc6\x56\x67\x7b\x5b\x01\x81\x3c\xb7\xd7\xdd\xe7\x19\xb6\xc7\xfa\x91\x3c\x4b\x22\xc3\x78\x7d\x3d\x99\x0e\xb7\x2d\xe6\xf9\x56\x9d\x67\x70\xe8\x8a\x4d\x12\x9b\x32\x31\x73\x72\xd6\x90\xb4\x68\x2a\x40\xd8\xb1\xd1\x98\x8b\x02\x78\x52\xf3\xf2\x9d\x9e\xd9\xc9\xf1\xc1\x9b\x00\x15\xa0\xec\x93\x23\xe5\x13\xb2\x08\x5b\x96\xbb\xa1\xdf\xe3\x81\x73\x94\xb2\x2e\x5d\x5d\x98\xfa\x5d\xa6\xac\x43\x9b\x0b\xa1\x6d\xd6\x9b\x75\xb3\xb9\xd5\xb7\xa3\x73\xdb\xe8\xac\x99\x5a\x3c\xf4\x8f\x51\xb7\x99\xa5\xd4\x7a\x76\x51\x1e\x16\xf9\x6a\xd4\x1e\x9b\xe6\x0e\xc0\x0a\x3f\x68\x6f\xfd\xe8\xcb\x0e\x31\x4f\xe5\x95\x8e\xc2\x1f\x60\x03\x3c\x0f\xf4\x3c\x29\xcb\x12\x7c\xc0\xc6\xe3\x06\x14\xfb\x97\xd1\xc7\x8c\x18\x18\x56\xd9\x2f\xed\x09\x4d\x73\xd7\x34\x58\xe1\x9e\x7b\x1a\x9d\x22\xc5\x7c\xcd\xb5\x2a\x9e\xdd\xee\x78\xf9\x14\x4c\xf4\x87\x8f\x4c\x23\x06\x56\xb8\x38\x08\x62\x0f\x26\xf3\x82\xcc\xbf\x47\x16\x05\x85\x0e\x99\x25\xc5\x20\xbc\xbe\x0c\x2a\x53\x6f\x4e\x78\xec\xd3\x38\xcb\x41\xaf\x07\x58\x74\xbf\x8d\x59\xdb\x63\xba\x8b\x2c\x6c\xc6\x6c\x75\xfa\x1c\x83\xf2\x5e\xdb\x05\x97\xc7\xf0\x49\x9e\x84\xf3\xff\xcc\x49\xfa\x96\xe3\x98\xde\x6a\xe4\x5c\xfc\xb3\xcd\x76\x67\x1d\x0f\xfc\x45\x0c\x39\xd2\xc3\xaf\xd0\x93\x13\xae\xfe\x05\x00\x00\xff\xff\x5d\x9a\x63\xab\x6a\x03\x00\x00"),
		},
		"/memcache-svc.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "memcache-svc.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 206,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8c\x3d\x0e\x02\x21\x10\x46\x7b\x4e\xf1\x5d\x00\x13\x2c\x39\x84\x8d\x89\xfd\x04\x3e\x23\x51\x58\x02\x64\x9b\xc9\xde\xdd\xb0\x6b\xe3\x76\xf3\xf3\xde\xb3\xd6\x1a\xa9\xe9\xc1\xd6\xd3\x52\x3c\x56\x67\xde\xa9\x44\x8f\x3b\xdb\x9a\x02\x4d\xe6\x90\x28\x43\xbc\x01\x8a\x64\x7a\x64\xe6\x20\xe1\xc5\xa8\x8a\xf4\xc4\xe5\x26\x99\xbd\x4a\x20\xb6\xed\x07\xed\xab\x87\xea\xff\x57\x15\x2c\x71\x62\xbd\x32\xcc\x62\x5d\xda\xe8\x73\x00\xec\x39\xbf\x5f\x0f\xc4\xc3\xb9\xab\x73\x06\xe8\xfc\x30\x8c\xa5\x1d\xce\xd9\xf8\x06\x00\x00\xff\xff\x20\x2f\xef\xba\xce\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/flux-account.yaml.tmpl"].(os.FileInfo),
		fs["/flux-config-configmap.yaml.tmpl"].(os.FileInfo),
		fs["/flux-config-secret.yaml.tmpl"].(os.FileInfo),
		fs["/flux-deployment.yaml.tmpl"].(os.FileInfo),
		fs["/flux-secret.yaml.tmpl"].(os.FileInfo),
		fs["/memcache-dep.yaml.tmpl"].(os.FileInfo),
		fs["/memcache-svc.yaml.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}

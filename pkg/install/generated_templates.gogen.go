// Code generated by vfsgen; DO NOT EDIT.

package install

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// templates statically implements the virtual filesystem provided to vfsgen.
var templates = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
		},
		"/cache-dep.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "cache-dep.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 1828,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x53\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\x06\xf6\xe5\x0b\xf0\x49\x89\x52\xb8\x81\x75\x4b\x93\xb6\x08\xd0\x06\x06\x82\xf4\xbe\xa6\xd6\x0e\x11\xfe\x28\x24\xe5\xda\x35\xfc\xee\x05\x25\xff\x48\xb0\x73\x48\xd1\x22\x3c\x51\x3b\xb3\xbb\xb3\xd4\xce\x7a\x9d\x42\xce\x60\x1d\xfe\xe3\x17\x64\x37\x24\x9e\xf8\x13\x89\x67\x36\x25\x06\x9a\xb5\x88\x81\x72\x70\x76\x0a\x1e\x9c\x21\xdd\x6c\x92\x34\x4d\x93\x21\xf6\x5c\x94\x5c\x29\xbb\xd2\x6c\x02\x6a\xcf\x25\xa6\x2b\x7c\x51\xf5\x12\xc1\xa2\x61\x24\x43\x08\x6b\x02\x49\xc3\x0e\x52\xd3\x9c\xa1\x39\x50\x49\x81\xb2\x84\x2a\xf9\x83\x9d\x97\xd6\x14\xa0\xaa\xf2\xe7\x8b\x3c\x79\x96\xa6\x2c\x70\xbb\x2f\x9b\xec\xe8\x45\x02\x18\xd2\x5c\x1c\xba\x27\xc0\x76\xa4\xec\x9e\x34\xfb\x8a\x04\x63\xb3\xd9\x12\x9b\xcf\x02\xeb\xf5\x11\x1a\x93\xe2\x50\x9b\x4d\xe2\x2b\x16\xb1\xb2\xe3\x4a\x49\x41\xbe\x40\x9e\x00\x9e\x15\x8b\x60\x5d\x44\x00\x4d\x41\x3c\x7d\xa3\x29\x2b\xdf\x06\x4e\x09\x09\xac\x2b\x45\x81\xb7\x29\x1d\xd1\xf1\xa8\x5e\xf6\xa9\x7c\x60\x27\xa5\xc1\x6d\xc9\x0f\x3d\x11\xf1\x4c\x39\x50\xf6\x5c\x4f\xd9\x19\x0e\xec\x33\x69\xcf\xad\x2f\xa0\xa4\xa9\x97\x5b\xd2\xfe\xb1\xf7\xcd\xd2\x93\xcd\xe2\x69\x7e\x47\x07\x28\xf2\x6c\x94\x5d\x5e\xf4\xf1\x49\xad\xd4\xc4\x2a\x29\x56\x05\xee\x66\xf7\x36\x4c\x1c\xfb\xf8\x5f\x76\x2c\x72\xf3\xce\x60\x29\x52\x8d\x51\x7e\x09\x60\x88\xef\xb4\x94\xba\xd6\xb1\x83\x75\xab\xb8\x13\xb5\xe7\xff\x21\x0d\x34\xcf\x69\xba\x0a\xec\xbb\x89\x77\x18\x69\xf4\x12\xbd\xfc\xc5\x98\x59\x07\x6b\x18\x32\xb0\xee\xd2\x2b\xe4\xf9\x65\x9e\x63\x88\x5b\x9e\x51\xad\x02\x2a\xeb\x0e\xba\x86\x91\xb3\x58\xb4\xd7\x47\x23\xac\x6e\xb6\x34\x58\xcc\x39\x40\xd9\xb9\x87\x9d\x81\x49\x3c\xc1\xf1\x4b\xcd\x3e\x80\x4c\x09\xc7\xbe\xb2\xc6\x73\xb6\x2f\x14\xab\xf6\x26\x6c\xdf\x53\x28\xc9\x26\x1c\x06\xe8\xbc\xfd\xc4\xba\x50\xb4\xea\x3a\x2b\x7a\x5d\x96\x0f\x2c\x6a\x27\xc3\xea\xc6\x9a\xc0\xcb\xd0\x2c\x63\x7b\x7c\x1f\x29\x3a\x65\x5d\x6d\xae\xfd\xa3\x67\x77\x28\xd9\x83\xbe\x3a\x5b\x57\xc7\x18\x29\x65\x7f\x4e\x9c\x5c\x48\xc5\x73\xfe\xec\x05\x29\x0a\x8d\xd5\x66\xa4\x3c\xf7\x6d\xd0\x5c\x95\xe7\x28\xf4\xd8\xfb\x8e\x4b\xe9\x07\x1d\xff\x37\x81\x77\xf1\x7e\xd3\xf9\xbd\x7d\xbf\x13\xf1\x27\x9e\xdf\xe5\xfe\x73\xbf\x1f\x1a\x75\xbc\xde\x04\x8b\x51\x76\x91\x5d\xbd\xd1\xe6\xaf\xb8\xa0\xdf\xe5\xc8\x03\x1f\x3f\x5c\x8d\xff\xae\x05\xc6\xe3\xf1\x2b\x06\xe8\x23\x6f\x5f\xff\xf6\xfa\x3b\x00\x00\xff\xff\x6f\x96\x87\x7d\x24\x07\x00\x00"),
		},
		"/cache-svc.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "cache-svc.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 530,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\xbd\x4a\x04\x31\x14\x85\xfb\xfb\x14\x87\xa9\xdc\x22\x0b\x51\x50\x4c\xa9\xbd\x8d\x60\x7f\x49\x8e\x18\x76\x33\x33\x26\xc3\x36\x43\xde\x5d\x32\xb3\xfe\xe0\xae\x08\x9b\x2a\xc9\x3d\x3f\xf7\x9b\x67\x83\xf8\x8a\x21\xe3\x8a\xef\xd8\x3e\xaa\x7f\xe3\x83\xfa\x1d\xfb\x80\x2e\x31\xf9\xf6\x11\xba\xcd\xb9\x71\xb7\x81\xa9\x55\x8c\x31\xa2\x63\x7c\x61\x2e\x71\xe8\x1d\x0e\x56\x76\xb1\x0f\x0e\xcf\xcc\x87\xe8\x29\x89\x93\x06\x9d\xd4\x09\xd0\x6b\xa2\xc3\x57\xb0\x1c\xfb\xb7\x4f\x9a\x58\x46\xf5\x44\xad\x47\xd9\xf2\x74\x98\xe7\x5f\xd3\x66\x69\xfd\xb5\x4a\x19\xe9\x5b\xea\x38\xe4\xa9\xb4\x0b\x60\x4e\x2a\xb0\x9c\x26\x71\xb0\xf6\xda\x5a\x01\x0a\xf7\xf4\xd3\x90\x57\xcf\xb9\xa5\xb8\x2f\x6c\x9b\x9d\x62\x67\x86\x58\xba\x4b\xd1\x17\xb7\x00\x17\x80\xaf\xa6\xff\xd1\x3f\x2b\xbe\xb1\x6f\x6f\xee\xee\xff\xa0\x5e\xc5\x3f\x82\x3f\x02\x00\x00\xff\xff\x2f\xc6\xf9\x18\x12\x02\x00\x00"),
		},
		"/flux-account.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-account.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 836,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x4b\xaf\xd3\x30\x10\x85\xf7\xfe\x15\x47\xba\x8b\x0b\xe8\x26\xa8\x3b\x94\x5d\xdb\x05\x0b\x10\x8b\xf0\xd8\x20\x16\x63\x7b\x42\x4d\x5d\x3b\xf2\x23\x3c\xa2\xfc\x77\x94\xa4\x95\x9a\xb6\x20\x55\xba\x3b\x7b\x7c\xc6\x73\xe6\xe8\x2b\x8a\x42\x3c\xe0\xd3\x8e\x11\x39\x74\x46\x31\x48\x29\x9f\x5d\x7a\x82\xb2\x39\x26\x0e\x08\xde\x72\x7c\x02\x39\xbd\x28\x41\x1a\xa7\x8d\xfb\x0e\x0a\x2c\x1e\xe0\x9d\xfd\x0d\xc7\xac\x59\xa3\xf1\x01\xef\xb2\xe4\xe0\x38\x71\xc4\x4f\x93\x76\x53\x4b\x21\x29\xb2\x1e\x27\x70\x8c\x50\xde\xa5\xe0\x2d\x5e\xd4\x9b\xf5\xf6\x65\x29\xa8\x35\x5f\x38\x44\xe3\x5d\x85\x6e\x25\xf6\xc6\xe9\x0a\x1f\x67\x57\xeb\xd9\x94\x38\x70\x22\x4d\x89\x2a\x01\x58\x92\x6c\xe3\x78\x02\x1c\x1d\xb8\x42\x63\xf3\x2f\x71\x7e\xe9\x7b\x98\x06\xe5\x07\x3a\x70\x6c\x49\x31\x86\xe1\xf8\x3e\x5d\x2b\xf4\xfd\xf2\xb5\xef\xc1\x4e\x0f\x83\x18\x73\x39\x37\x14\x24\xa9\x92\x72\xda\xf9\x60\xfe\x50\x32\xde\x95\xfb\x37\xb1\x34\xfe\x75\xb7\x92\x9c\xe8\xe4\x77\x3b\x27\x54\x7b\xcb\xf7\x9a\x15\x21\x5b\x9e\x24\x05\xa8\x35\x6f\x83\xcf\x6d\xac\xf0\xf5\xf1\xd5\xe3\xb7\xa9\x2f\x70\xf4\x39\x28\x5e\x14\x3b\x0e\xf2\xac\x50\xc0\x79\x57\x1f\x85\x9f\xeb\xf7\xff\xd6\x3e\xc3\x86\x9b\x99\x80\xfb\x17\xf5\x96\x6b\x6e\x46\xd1\x69\xd1\xff\xcc\x17\xc0\x75\xb6\x8b\xff\x62\x96\x3f\x58\xa5\x63\x76\x37\xc1\xb9\xb2\x73\x89\xc1\x25\x27\xb7\xc8\xb0\x71\x3c\x69\x6e\x28\xdb\x34\xa3\x32\x12\xf5\x37\x00\x00\xff\xff\xfd\x7f\x67\x6a\x44\x03\x00\x00"),
		},
		"/flux-deployment.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-deployment.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 7751,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xdd\x6f\x1b\x37\x12\x7f\xf7\x5f\x31\x50\x0e\x48\x0c\x48\x2b\xbb\x6e\x7b\xd7\xed\xa9\xb8\x34\x1f\xae\x2f\x4d\x6a\xd8\xc9\x1d\xfa\x54\x53\xdc\x91\x96\x10\x97\xdc\x72\xb8\x52\x05\xa3\xff\xfb\x61\xc8\xfd\xe0\xca\xb2\x53\x14\xe8\xc3\xf9\x21\xb1\x77\x67\x86\x33\xbf\xf9\xe4\xec\x6c\x36\x3b\x11\xb5\xfa\x0f\x3a\x52\xd6\xe4\x20\xea\x9a\xe6\xdb\xf3\x93\x8d\x32\x45\x0e\xaf\xb1\xd6\x76\x5f\xa1\xf1\x27\x15\x7a\x51\x08\x2f\xf2\x13\x00\x23\x2a\xcc\x61\xa5\x9b\xdf\xee\xef\x41\xad\x20\xfb\x20\x2a\xa4\x5a\x48\x84\xdf\x7f\x6f\xdf\x87\x3f\x73\xb8\xbf\x1f\xbf\xbd\xbf\x07\x34\x05\x93\x51\x8d\x92\x85\x39\xac\xb5\x92\x82\x72\x38\x3f\x01\x20\xd4\x28\xbd\x75\xfc\x06\xa0\x12\x5e\x96\x3f\x8a\x25\x6a\x8a\x0f\xd2\xb3\x99\xda\x3b\xe1\x71\xbd\x8f\x2f\xfd\xbe\xc6\x1c\x6e\x50\x3a\x14\x1e\x4f\x00\x3c\x56\xb5\x16\x1e\x5b\x61\x89\x05\xfc\x23\x8c\xb1\x5e\x78\x65\x4d\x2f\x1c\xa0\x76\xb6\x42\x5f\x62\x43\x99\xb2\xf3\xda\x3a\x9f\xc3\xe4\xe2\xec\xe2\x7c\x02\xcf\xc0\xa3\xd6\x09\x05\x78\x0b\x24\x9d\xa8\x11\xe6\x15\x7a\xa7\x24\xb1\x71\xb5\x55\xc6\x3f\x27\x60\xe6\xac\x15\xac\x47\x36\x1c\x58\x01\xd0\x61\x11\x5e\xd9\x02\x6f\x47\x28\xf0\xcf\x12\xbd\xc8\x36\xcd\x12\x9d\x41\x8f\x41\x39\x4b\x39\x68\x65\x5a\x11\x0c\x9d\xdb\x2a\x89\x2f\xa5\xb4\x8d\xf1\x1f\xc6\x27\x00\x6c\xad\x6e\x2a\xec\x75\x98\xb5\x3a\xac\x95\x9f\x6d\x70\xdf\x1f\x44\x0c\x9f\x1f\x0e\xee\x9e\x0c\xf2\x66\xcc\x52\x84\xc8\x48\xa8\x0a\x5c\x89\x46\xfb\xf7\xb6\xc0\x1c\xce\xbe\x3c\x3b\x83\x67\xb0\x2b\xd1\x40\xc5\xda\x60\x01\x0e\x45\x31\xb3\x46\xef\xa7\xb0\x43\xd8\x59\xf3\xdc\xc3\x12\x41\x2c\x35\x32\x90\xb2\xac\x6c\x71\xd2\x0a\x7c\x06\x1f\x4b\x45\xa0\x08\x04\xf8\xaa\x5e\x11\x34\x84\x05\xac\xac\x83\x35\x1a\x74\xc2\x2b\xb3\x86\xdb\xdb\x1f\x60\x83\x7b\xca\xe0\xca\xc0\xbb\x7f\x10\x7c\xb7\x80\xf3\xec\xfc\x6c\xda\x4b\xe9\xce\x8e\x26\x10\x08\x87\xa9\x1e\x64\x59\x15\x83\x58\x80\x00\xc2\x5a\x70\x34\xb5\x40\xc1\x0e\x7b\x31\x52\x18\xd8\x39\xe5\x59\xd1\xec\x38\x7e\x6b\x34\x3d\x18\x58\xd5\x7e\xff\x5a\xb9\x14\xc4\x0a\x0b\xd5\x54\x39\xbc\xc7\xca\xba\x7d\x6a\x27\xc2\xca\x6a\x6d\x77\x6c\x51\x7b\xb4\xa2\x60\x6a\x43\xfc\x4c\x80\x6c\xc8\xdb\x4a\x31\x02\x1b\x63\x77\xe6\x97\xd2\x92\xa7\x5e\xc4\x4a\x69\x9c\xc2\xae\x54\xb2\x84\xbd\x6d\x60\xa7\xb4\x8e\x46\x79\x0b\x85\xe5\x04\xe5\xc7\xcc\xc4\xbf\x38\xb0\x3b\xc3\x6a\xf7\x02\x1c\xd6\x16\x9c\xf0\x25\x3a\xf0\xa5\x30\xed\xc1\x6b\xe5\xcb\x66\x09\x96\x1f\x22\x68\xb5\xc1\x0c\x7e\xb6\xcd\x73\xad\x41\x68\xb2\xdd\x11\x63\xb0\x41\x79\x50\xc6\xdb\xc0\x23\xad\xf1\x42\x19\x74\x53\x58\xa2\xb6\xbb\x0c\x6e\x71\x40\xb5\xf4\xbe\xa6\x7c\x3e\x2f\xac\xa4\x8c\x03\x4b\x16\x1c\xd6\x68\xe6\x9c\xb3\xe4\xe7\xeb\x46\x15\x48\xf3\x86\x70\x56\x3b\xb5\x15\x1e\x43\xe8\xb1\x21\xbd\x90\xce\x0d\x44\xe5\x4c\x5a\xb3\x52\xeb\xfe\x15\x40\x7c\xf0\x5e\xd4\x79\xf2\x30\x4d\xbe\x59\xc2\xf6\x67\x5d\x12\xb2\x72\x1e\x85\x0c\x91\xf7\x59\x77\xec\x14\x95\xfc\xa4\x14\x5b\x04\x01\x85\x5a\xad\xd0\x71\xa1\xed\x24\xb4\x09\x35\x14\xd3\x80\x7e\x14\x97\xe2\xcf\x05\x69\xab\x0a\xec\x10\x5f\xa9\x75\x25\xea\x41\x11\xe5\x4b\x10\x06\xd0\x78\xb7\x0f\x36\xdc\x45\xa2\xbb\x29\x08\x53\x40\x63\xa4\xad\xb8\xc2\x07\xfe\x68\xed\xfb\xe0\x49\x61\x8a\x5e\x0a\x9a\x6d\x90\xa0\x90\x5a\x57\x3e\xf0\x00\xc3\xf0\x27\x3c\x90\xb0\x7d\xd6\x03\xa1\x08\x78\x0b\xaa\xe2\xda\x0a\x97\xd7\x97\x21\xff\xe1\x05\x9b\x45\x6a\x6d\x94\x19\x0e\x67\xe3\xb6\xe8\xd4\x4a\xc9\x50\xe4\xa1\x6e\x5c\x6d\x09\xe9\xf4\x0f\x00\xd9\x4b\x89\x95\x23\xa2\xc8\x00\xf1\x79\x7f\x00\x38\x10\x6e\x3d\x64\xe8\x23\x88\xad\xeb\x35\x97\x0e\x4a\xa0\x19\x57\xdf\x67\x8f\xd4\xdf\x87\x7c\x47\xea\x6f\x07\x67\x9f\x84\x0f\x4a\x7f\xd2\x1c\x5a\xd4\x1d\x86\x12\x69\x2c\x4c\xf2\x98\x84\x13\x50\x95\x58\x63\x8c\x7e\x66\xc8\xe0\xad\x32\x45\xb0\xb9\xe2\x8a\xe2\x50\x0e\x51\x1b\xab\x89\x46\x41\xc8\x75\x23\xb0\xb2\x13\x78\xb6\x00\xe1\xfb\x94\x2f\x9b\x65\x56\x58\xb9\x41\x97\x49\x5b\xcd\xdd\x3c\xa6\x7f\xf8\x6f\xee\x45\x0f\x5d\xe7\x47\x9e\x11\x78\x7e\xe0\x53\xbd\x58\x03\x6b\x9a\xf5\x34\xe1\x98\x1c\x5a\x81\xca\xa6\xd2\xf2\xf3\xec\xfc\x9b\xec\x6c\x4c\x7b\xdd\x68\x7d\x6d\xb5\x92\xfb\x1c\xae\x56\x1f\xac\xbf\x76\x48\xa9\x15\x0e\xc9\x36\x4e\x22\xa5\x25\xdc\xe1\xaf\x0d\x92\x1f\x3d\x03\x90\x75\x93\xc3\x57\x67\xd5\xe8\x61\x15\xaa\x7c\x0e\x5f\x7f\xf9\x5e\x0d\xa3\x85\x75\x29\xf3\x6c\xf0\xcc\x75\x18\x33\x2e\xce\x2e\xb8\x69\x2a\xb3\xb2\xae\x0a\x21\x2b\x74\x4f\xad\xd5\x16\x0d\x12\x5d\x3b\xbb\xc4\x54\x03\x86\xf4\x72\xdc\xb0\xe3\x51\x51\xe0\xf8\xb1\xf0\x65\x0e\x73\x51\xab\x88\xf4\xf6\xeb\xb9\x2a\xd0\x78\xe5\xf7\x59\xdd\x2c\x13\x5a\x65\x94\x57\x42\xbf\x46\x2d\xf6\xb7\x9c\x9f\x05\xe5\xf0\x55\x42\xe0\x55\x85\xb6\xf1\x47\xde\x71\x7f\x55\xff\x1f\xaa\x26\x49\x3b\x72\xcc\xf1\xc9\x08\x62\x87\xbb\x8e\x9a\xa1\x97\x41\xb3\x62\x4e\x54\xf2\x6c\x68\xe3\xb4\x0a\xda\xb6\xf5\x66\xcd\x2e\x03\x65\x62\xcc\x3d\xa7\xc8\x43\x54\xce\x47\x65\xb2\xc3\xec\x27\xa3\xf7\x39\x78\xd7\x20\x4b\xe3\xf1\x27\x54\xa8\x65\x5b\xd8\x39\xa5\x6a\x74\x2b\xeb\x24\xb2\xd0\x38\xef\xf0\xb8\xf3\x98\xe2\xe9\x48\x32\xd6\x7d\x2b\x5c\xab\x7b\x24\xfb\x73\xea\x27\x39\x7a\x65\xa4\x6e\x42\xe5\xe4\xa9\x2d\x36\xb8\xae\xaa\xc6\xb1\xe0\x33\x53\x4c\x37\xc7\x7c\xcb\xac\x07\x13\x46\x5f\x5d\xa1\x40\xa9\x85\xe3\x69\x6d\x69\xb7\x49\x01\x78\x62\x0c\x88\xe5\x31\x35\xde\x59\xeb\xe7\x19\x51\xf9\xa8\x01\xc2\x8c\x4e\x9d\x0c\x2d\x6a\x12\x4f\x9e\x76\x24\x89\x04\x34\x5b\xe5\xac\x09\x0d\x21\xf6\xda\xc9\xbb\x4f\xdf\xbf\x79\xf5\xd3\x87\xb7\x57\x97\x93\xd8\x02\xa6\x8c\x87\xdd\xa2\x73\xe3\x7e\x9d\x88\x09\x2d\x6e\xb9\x8f\xdd\xd4\xeb\x63\x36\x3e\x68\xb4\x0f\x6d\x1c\x82\x93\x89\x1f\x35\x94\x7b\x1e\x5f\x56\xba\xd3\xb8\x44\x27\xa3\x48\xab\x5d\xf0\x49\x22\xe2\x70\xa0\x49\x9d\x1e\xa6\x99\x6e\xea\x16\x06\x84\xf6\xe8\x0c\x4f\xd5\x0f\x34\x5e\x39\x5b\x71\x58\x74\x13\xcb\x14\x04\x71\xb8\xb5\x5d\x95\x61\xd0\x56\x6e\xe8\xa1\xb3\xd1\x6c\xf3\x23\xb8\x0c\x70\x8f\x70\xd9\x0a\xdd\xe0\x03\x4c\x3e\x17\xc4\x87\x31\xd0\xf5\xdc\x27\x22\x80\x5b\xfe\xb8\xd5\x3f\xd1\xec\x1f\x89\x4b\xa6\x8a\xd3\xcd\x88\x6e\x5c\x1f\x3e\x97\x79\x3b\xc1\x43\x89\x05\x6a\xea\x5a\xef\xe1\x87\x8f\x1f\xaf\x61\x29\x48\x49\x10\x8d\x2f\x41\x3a\x0c\x95\x54\xe8\xd8\xd5\x87\xab\x00\x0b\xdc\x2a\x11\x0c\xbf\xbb\xbc\xfa\xf8\xcb\xcb\x4f\x1f\x7f\xf8\x74\xfb\xe6\xe6\x2e\x98\xdb\x3f\x7a\xf7\xe6\xe7\xbb\x51\xc0\x6f\x85\x53\x7c\x91\xa3\x6e\x40\x4e\x04\xc6\xf1\xe5\xc0\x7f\x6f\x9d\xad\xc6\x3e\x8c\x64\x37\xb8\xca\x47\x96\x8f\x66\x45\x2e\x6c\x6c\xc2\x00\x00\x63\x9e\x9f\xc4\x2d\x04\xfe\x0a\xd9\x2b\x21\x4b\xfc\x5e\xc8\x0d\x9a\x02\x26\x0e\x0b\x45\x93\xb8\x93\x88\x3f\x33\x98\xcd\x24\xd3\xcc\x96\x91\x68\x71\x7f\x7f\xc0\x95\x50\x3f\x83\x1b\x96\xc0\x81\x19\x98\xa0\x65\x0a\xc8\xf2\x04\xaa\x08\xc8\x73\x3a\xe0\x6f\x35\x3a\xc5\x58\x08\x9d\x1a\xd0\x7a\x24\xde\x96\xc3\x25\x98\xe5\x29\x33\x4a\xb3\x7e\xc2\x67\xa7\xb1\xa1\xd3\x44\x82\x75\xed\x08\x9f\x30\xb4\x37\xfd\xc0\x38\x0d\x07\xf0\x0d\xb5\xa9\x0b\x4e\x34\x5f\x22\xa5\x61\x39\x0c\xd2\x7e\x67\x19\xb0\x86\xd5\x0c\xc9\x1f\xf6\x19\x21\x27\xa0\xb4\xbb\x70\x0b\xb7\xc6\xa0\x0c\xd1\xa3\x12\x9f\x31\x6c\x41\xf5\x59\x7b\xf4\x22\xfc\x75\xe4\x3d\xc3\xb2\xf8\xfa\xe2\xef\xdf\x9c\xdc\xdf\xcf\x00\x35\x21\x63\x60\x1d\xbc\x78\xe8\x9e\x0a\xab\x00\x6b\x31\x39\x3d\xf6\x7a\x72\x3a\xf6\xc5\xd5\x01\x96\x3d\xfb\x5f\x84\x67\x9b\x3e\x7f\x05\x9e\xcf\x02\x62\xbd\x01\xe1\x4a\xcb\x87\x2f\xfa\x47\x59\x3b\xcf\x67\xb4\x95\x99\xd4\x0d\x79\x74\x19\xf7\x66\x9d\x66\xff\x27\x8a\x6d\x64\x80\xe2\x55\x24\xbd\xba\x1e\x19\xc5\x1d\x85\xd0\x87\xad\xc9\xb8\x68\x0d\x3a\x74\xf4\x5c\x38\xbc\x63\xca\xb0\xc7\x18\xf9\xf8\x01\xf5\x22\xba\x39\xa6\xcd\xe8\x2e\xa1\x08\xaa\x86\xc2\x8a\x27\x00\xa9\xb0\x88\x45\x73\x19\xc6\x97\x30\xc9\x87\xcd\xce\x8b\x6e\x5d\x72\x9a\xaa\xd5\xb5\x90\x58\x6c\xb9\x4c\x25\x0b\x9e\x91\x4e\xdc\xf2\xe3\x18\x33\x2b\x94\x5b\x3c\x18\x6e\x4e\x46\xe9\x3c\xdc\x23\x06\x3f\x7e\xba\xf9\x31\x6e\xa0\x84\x59\xc7\x77\x97\xca\x87\xad\x08\x29\x6f\xdd\xbe\x6f\xca\x6f\xf9\xfe\x93\x88\x7b\xaa\xb2\x72\x04\x25\xb6\xb7\x85\xf1\x68\xd1\x4c\x0b\x46\x77\x43\xfa\xdb\x8b\xb4\xfe\x9e\xe6\xc3\xdf\xef\xde\xfc\x7c\xfa\xaf\xb8\x9b\x09\x97\xa7\x86\xd0\xcd\x07\x65\xb3\xb4\x9c\x33\x3e\x5c\x34\x1b\xa7\x43\xa1\xbb\x54\x9e\x8d\x3d\x28\x88\x4c\xb1\x74\xc2\xc8\xb2\x23\xfa\x3e\xfc\x15\xd7\xb5\x6a\x15\x1e\x71\x97\xa2\x63\x9c\x3c\xa9\x33\xdf\x6d\x08\x1a\xfa\xb7\x55\x26\x61\x98\x4c\x27\xed\xd6\x97\x4b\xc1\x38\x9f\x9f\x68\x5d\x0e\x39\x06\x65\xbc\x5b\x57\xc2\xa8\x15\xdf\xbc\x38\x9d\x48\x15\xe8\xa2\x3b\x0e\xee\xaf\x61\xe9\x64\x09\xa1\x31\x05\xba\x03\x1f\x3b\xd4\xc2\xab\x2d\x86\x8b\x05\x75\x11\xb8\x1e\xf9\xf9\x20\x3d\x7b\xe3\xa8\x59\x16\xca\x9d\x4f\xe3\xff\x5f\xf4\x2b\xec\x01\x9c\xb0\xa2\x3e\x06\x4e\xd8\xfb\x76\xa8\x76\x54\x47\x04\x7c\x22\x74\xc7\xf8\xd9\xb9\xbd\xe7\x98\x06\x8e\xf3\xbf\xa9\x84\x3a\xaa\x00\xf2\x8b\x4e\x42\x47\x35\x2c\xe1\x8f\xba\x03\xb9\xaa\xec\x2c\x03\x8a\x26\xec\x67\x19\x27\x9e\xcb\x94\x3f\x58\xb3\xa4\x58\xb5\x13\x4e\x3b\xbf\x2c\x9e\x18\x68\x3a\x8e\x56\x16\x73\x2d\xfe\xb9\xc1\x3d\xa8\xe2\xbb\x9e\xec\x89\xa1\x35\xd1\x8a\x45\x08\xdf\x38\x1c\xed\x7a\x8e\x9c\x15\x5e\xef\x67\x3d\x3d\x8d\xca\x55\x57\xb8\x41\x79\x28\x05\x85\x81\xcb\x1a\xbd\x07\x21\x25\x52\x2c\xee\x25\xc6\x4d\xe9\x8b\x6e\x33\x77\xb7\x12\x9a\xf0\xee\x34\xd4\xc0\xd6\x11\x37\xed\xa4\x76\xcc\x17\x9d\xd0\xa1\x35\x8e\xf2\xe1\x38\xd9\x11\x3f\x91\x77\x8d\xf4\x51\xdf\x5d\x58\xda\xf0\x20\xdf\x78\xa0\xbd\x91\xb0\xb4\x76\xb3\x41\xac\x39\xea\x7b\x55\x27\x6b\xe5\x27\x53\xa8\x50\x30\xe0\x5c\xd0\x40\x84\x4d\x4a\x9b\x08\x4d\x4d\xde\xa1\xa8\xfa\x8c\x38\x3d\x50\x8c\x45\xcf\xc8\x0b\x8f\x0b\x2e\x30\x8f\xc6\x8d\xc1\xdf\x7c\x17\x3c\x49\xf3\x13\x06\x26\xdd\x19\x93\xae\x35\x25\x42\x5e\x60\xb6\xce\xa6\xf0\x5f\xe4\xfb\xc3\x2b\x6d\x9b\xe2\x34\x0b\x6b\x40\x6f\x37\x7c\x0b\x25\xa8\x85\xf3\x4a\x36\x5a\xb8\xce\x19\xad\x94\xc3\xae\xda\x9e\xba\xd8\x11\xd7\x51\xc9\xb2\xb2\x1d\xcb\xcd\x76\xd6\x6d\xa8\x5f\x29\x1c\xb0\x85\x83\x16\x62\x29\xcf\xbf\xb8\x78\xf8\x6f\x6a\xf0\x9b\x18\x7d\x5d\x55\xea\xbf\x48\x58\xf3\x44\x68\xbc\x6f\xa9\x2f\x07\xe2\x83\x08\xe9\xe4\xcd\x06\x79\x8b\x30\xed\x3f\x1e\x2d\xc7\x58\xc2\xc1\x8f\x84\xce\x2d\xba\xed\x91\x6f\x55\x7c\xed\x1b\x86\x21\xce\xd5\x6f\xd3\x56\x2c\x36\xdc\xc6\x62\x94\x11\xfa\xe4\x03\xd8\xf3\xe4\x1b\x5a\xf2\x31\x8c\x9d\x13\xc6\xe3\x70\xf5\x1a\x4f\x91\x5a\x91\x47\x33\x6b\x55\x58\xe4\x17\x67\x17\xe7\x3d\x48\x37\xb8\x56\xe4\xdd\xfe\xb5\x22\x86\xf8\x56\x0a\x13\xc2\xf5\x00\x29\xd7\x92\xcd\x8a\x48\x37\xa3\x96\x30\x35\xbb\xad\x8d\x2f\x8b\x42\xc5\x55\x1a\x37\xef\x97\x7c\x45\x1b\xc1\x38\xbc\x1f\x46\xb9\xfb\x7b\x70\x61\x14\xf8\x0c\xf7\x2c\x7c\xdd\x1c\xd5\xd3\xe1\xb7\xee\x80\x9f\xea\x56\xfc\xeb\x0f\xb7\xdd\x0c\x46\xd3\xf6\xda\xdb\xb8\x76\x22\x03\x53\x58\x4f\x60\x03\x31\x54\x62\x1f\x56\x90\x7a\x3b\x2c\xa2\x0d\x69\x6b\x37\x4d\x0d\x8a\xa8\x41\x02\x6b\x80\x6c\x85\xf0\xae\xff\x26\xc8\xd2\x9b\x9a\x86\x3d\x73\x61\xa8\xdb\x72\x4e\x3e\x58\x83\x93\xf4\xcd\xab\xa0\x40\xba\x69\x8e\x87\xd3\x78\xf9\xdc\x5d\x5f\x83\x7e\xa3\x37\xfd\xcd\x7a\x72\x3e\x39\xf9\x5f\x00\x00\x00\xff\xff\xa3\x8f\x81\x60\x47\x1e\x00\x00"),
		},
		"/flux-secret.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-secret.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 137,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xca\x31\x0a\xc2\x40\x10\x85\xe1\x7e\x4f\xf1\x2e\xb0\x82\xed\x1c\x42\x0b\xc1\x7e\xc8\xbe\xc8\x62\xb2\x19\x93\x89\x18\x86\xdc\x5d\x14\x1b\xcb\x9f\xff\xcb\x39\x27\xb5\x7a\xe5\xbc\xd4\xa9\x09\x9e\xc7\x74\xaf\xad\x08\x2e\xec\x66\x7a\x1a\xe9\x5a\xd4\x55\x12\xd0\x74\xa4\xa0\x1f\xd6\x57\xbe\x55\xcf\x85\x36\x4c\x5b\x04\x6a\x8f\xc3\x49\x47\x2e\xa6\x1d\xb1\xef\x3f\xfa\x4d\x41\xc4\xff\x8d\x00\x5b\xf9\x30\xdf\x8c\x82\xb3\xe9\x63\x65\x7a\x07\x00\x00\xff\xff\x40\x21\xa1\xbb\x89\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/cache-dep.yaml.tmpl"].(os.FileInfo),
		fs["/cache-svc.yaml.tmpl"].(os.FileInfo),
		fs["/flux-account.yaml.tmpl"].(os.FileInfo),
		fs["/flux-deployment.yaml.tmpl"].(os.FileInfo),
		fs["/flux-secret.yaml.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}

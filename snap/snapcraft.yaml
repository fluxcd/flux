name: fluxctl
summary: fluxctl talks to Flux and helps you deploy your code
description: |
  fluxctl talks to your Flux instance and exposes all its
  functionality to an easy to use command line interface.
confinement: strict
adopt-info: fluxctl
base: core18

parts:
  launcher:
    source: snap/local
    source-type: local
    plugin: dump
    organize:
      '*': bin/
    override-stage: |
      cd $SNAPCRAFT_PART_INSTALL
      chmod +x bin/fluxctl-launch
      snapcraftctl stage
  fluxctl:
    source: .
    override-pull: |
      snapcraftctl pull
      FLUX_TAG="$(git tag -l | egrep -v '^(chart-|helm-|master-|pre-split)' | sort --version-sort | tail -n1)"
      set +e
      git describe --exact-match --tags $(git log -n1 --pretty='%h')
      retVal=$?
      set -e
      if [ $retVal -eq 0 ]; then
        snapcraftctl set-version "$FLUX_TAG"
        snapcraftctl set-grade stable
      else
        GIT_REV="$(git rev-parse --short HEAD)"
        snapcraftctl set-version "$FLUX_TAG+$GIT_REV"
        snapcraftctl set-grade devel
      fi
    plugin: nil
    override-build: |
      export GOBIN=$SNAPCRAFT_PART_INSTALL/bin
      go build -o $GOBIN/fluxctl ./cmd/fluxctl
    build-environment:
      - GO111MODULE: 'on'
      - CGO_ENABLED: '0'
    build-packages:
      - gcc
      - git
    build-snaps:
      - go/1.13/stable
    stage:
      - -bin/fluxd
      - -bin/helm-operator
    organize:
      bin/fluxctl: bin/fluxctl.real
    after: [launcher]

plugs:
  kube-config:
    interface: personal-files
    read:
    - $HOME/.kube
    - $HOME/.minikube
    - $HOME/.config/k3d  # hard-coded $XDG_CONFIG_HOME for the common case

apps:
  fluxctl:
    command: bin/fluxctl-launch
    plugs:
    - kube-config
    - network
    - network-bind
